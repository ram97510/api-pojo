/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2025-01-29T14:04:36.349+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_56d8b3b2_a939_46b7_babf_399cbee200f6

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-56d8b3b2-a939-46b7-babf-399cbee200f6 > gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_56d8b3b2_a939_46b7_babf_399cbee200f6", algorithm="gbm")
public class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 34; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* months_as_customer */ null,
    /* age */ null,
    /* policy_state */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2.VALUES,
    /* policy_csl */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3.VALUES,
    /* policy_deductable */ null,
    /* policy_annual_premium */ null,
    /* umbrella_limit */ null,
    /* insured_sex */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7.VALUES,
    /* insured_education_level */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8.VALUES,
    /* insured_occupation */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9.VALUES,
    /* insured_hobbies */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10.VALUES,
    /* insured_relationship */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11.VALUES,
    /* capital-gains */ null,
    /* capital-loss */ null,
    /* incident_type */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14.VALUES,
    /* collision_type */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15.VALUES,
    /* incident_severity */ null,
    /* authorities_contacted */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17.VALUES,
    /* incident_state */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18.VALUES,
    /* incident_city */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19.VALUES,
    /* incident_hour_of_the_day */ null,
    /* number_of_vehicles_involved */ null,
    /* property_damage */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22.VALUES,
    /* bodily_injuries */ null,
    /* witnesses */ null,
    /* police_report_available */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25.VALUES,
    /* total_claim_amount */ null,
    /* injury_claim */ null,
    /* property_claim */ null,
    /* vehicle_claim */ null,
    /* auto_make */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30.VALUES,
    /* auto_year */ null,
    /* policy_bind_year */ null,
    /* incident_month */ null,
    /* fraud_reported */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.7570093457943925,0.24299065420560748};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.7570093457943925,0.24299065420560748};

  public gbm_56d8b3b2_a939_46b7_babf_399cbee200f6() { super(NAMES,DOMAINS,"fraud_reported"); }
  public String getUUID() { return Long.toString(6602074354616124216L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_0.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_1.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_2.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_3.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_4.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_5.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_6.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_7.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_8.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_9.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_10.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_11.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_12.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_13.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_14.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_15.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_16.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_17.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_18.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_19.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_20.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_21.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_22.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_23.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_24.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_25.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_26.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_27.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_28.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_29.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_30.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_31.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_32.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_33.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_34.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_35.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_36.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_37.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_38.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_39.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_40.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_41.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_42.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_43.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_44.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_45.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_46.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_47.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_48.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_49.score0(data,preds);
    preds[2] = preds[1] + -1.1363526166509565;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.24341407999600598);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6 implements java.io.Serializable {
  public static final String[] VALUES = new String[34];
  static {
    NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "months_as_customer";
      sa[1] = "age";
      sa[2] = "policy_state";
      sa[3] = "policy_csl";
      sa[4] = "policy_deductable";
      sa[5] = "policy_annual_premium";
      sa[6] = "umbrella_limit";
      sa[7] = "insured_sex";
      sa[8] = "insured_education_level";
      sa[9] = "insured_occupation";
      sa[10] = "insured_hobbies";
      sa[11] = "insured_relationship";
      sa[12] = "capital-gains";
      sa[13] = "capital-loss";
      sa[14] = "incident_type";
      sa[15] = "collision_type";
      sa[16] = "incident_severity";
      sa[17] = "authorities_contacted";
      sa[18] = "incident_state";
      sa[19] = "incident_city";
      sa[20] = "incident_hour_of_the_day";
      sa[21] = "number_of_vehicles_involved";
      sa[22] = "property_damage";
      sa[23] = "bodily_injuries";
      sa[24] = "witnesses";
      sa[25] = "police_report_available";
      sa[26] = "total_claim_amount";
      sa[27] = "injury_claim";
      sa[28] = "property_claim";
      sa[29] = "vehicle_claim";
      sa[30] = "auto_make";
      sa[31] = "auto_year";
      sa[32] = "policy_bind_year";
      sa[33] = "incident_month";
    }
  }
}
// The class representing column policy_state
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "IL";
      sa[1] = "IN";
      sa[2] = "OH";
    }
  }
}
// The class representing column policy_csl
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "100/300";
      sa[1] = "250/500";
      sa[2] = "500/1000";
    }
  }
}
// The class representing column insured_sex
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "FEMALE";
      sa[1] = "MALE";
    }
  }
}
// The class representing column insured_education_level
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Associate";
      sa[1] = "College";
      sa[2] = "High School";
      sa[3] = "JD";
      sa[4] = "MD";
      sa[5] = "Masters";
      sa[6] = "PhD";
    }
  }
}
// The class representing column insured_occupation
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[14];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "adm-clerical";
      sa[1] = "armed-forces";
      sa[2] = "craft-repair";
      sa[3] = "exec-managerial";
      sa[4] = "farming-fishing";
      sa[5] = "handlers-cleaners";
      sa[6] = "machine-op-inspct";
      sa[7] = "other-service";
      sa[8] = "priv-house-serv";
      sa[9] = "prof-specialty";
      sa[10] = "protective-serv";
      sa[11] = "sales";
      sa[12] = "tech-support";
      sa[13] = "transport-moving";
    }
  }
}
// The class representing column insured_hobbies
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[20];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "base-jumping";
      sa[1] = "basketball";
      sa[2] = "board-games";
      sa[3] = "bungie-jumping";
      sa[4] = "camping";
      sa[5] = "chess";
      sa[6] = "cross-fit";
      sa[7] = "dancing";
      sa[8] = "exercise";
      sa[9] = "golf";
      sa[10] = "hiking";
      sa[11] = "kayaking";
      sa[12] = "movies";
      sa[13] = "paintball";
      sa[14] = "polo";
      sa[15] = "reading";
      sa[16] = "skydiving";
      sa[17] = "sleeping";
      sa[18] = "video-games";
      sa[19] = "yachting";
    }
  }
}
// The class representing column insured_relationship
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "husband";
      sa[1] = "not-in-family";
      sa[2] = "other-relative";
      sa[3] = "own-child";
      sa[4] = "unmarried";
      sa[5] = "wife";
    }
  }
}
// The class representing column incident_type
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Multi-vehicle Collision";
      sa[1] = "Parked Car";
      sa[2] = "Single Vehicle Collision";
      sa[3] = "Vehicle Theft";
    }
  }
}
// The class representing column collision_type
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Front Collision";
      sa[1] = "Rear Collision";
      sa[2] = "Side Collision";
      sa[3] = "undocumented";
    }
  }
}
// The class representing column authorities_contacted
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Ambulance";
      sa[1] = "Fire";
      sa[2] = "Other";
      sa[3] = "Police";
    }
  }
}
// The class representing column incident_state
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NC";
      sa[1] = "NY";
      sa[2] = "OH";
      sa[3] = "PA";
      sa[4] = "SC";
      sa[5] = "VA";
      sa[6] = "WV";
    }
  }
}
// The class representing column incident_city
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Arlington";
      sa[1] = "Columbus";
      sa[2] = "Hillsdale";
      sa[3] = "Northbend";
      sa[4] = "Northbrook";
      sa[5] = "Riverwood";
      sa[6] = "Springfield";
    }
  }
}
// The class representing column property_damage
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NO";
      sa[1] = "YES";
      sa[2] = "undocumented";
    }
  }
}
// The class representing column police_report_available
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NO";
      sa[1] = "YES";
      sa[2] = "undocumented";
    }
  }
}
// The class representing column auto_make
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30 implements java.io.Serializable {
  public static final String[] VALUES = new String[14];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Accura";
      sa[1] = "Audi";
      sa[2] = "BMW";
      sa[3] = "Chevrolet";
      sa[4] = "Dodge";
      sa[5] = "Ford";
      sa[6] = "Honda";
      sa[7] = "Jeep";
      sa[8] = "Mercedes";
      sa[9] = "Nissan";
      sa[10] = "Saab";
      sa[11] = "Subaru";
      sa[12] = "Toyota";
      sa[13] = "Volkswagen";
    }
  }
}
// The class representing column fraud_reported
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "N";
      sa[1] = "Y";
    }
  }
}

class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_0_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 15248.5f ? 
                    -0.13209876f : 
                    -0.0826772f) : 
                 (Double.isNaN(data[3 /* policy_csl */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.13209876f : 
                        -0.023371324f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.08550129f : 
                        0.13971984f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.071765184f : 
                        0.24608363f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        0.17645209f : 
                        0.3413917f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                    -0.13209876f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.091829345f : 
                        0.08535612f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
            0.15570916f : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.24426545f : 
                0.41153842f)));
    return pred;
  } // constant pool size = 122B, number of visited nodes = 15, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01000101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -94, 9, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-64, 0, 0, 0};
  // {01001010 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {82, 3, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-123, -44, 9, 0};
  // {01100011 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-58, 16, 0, 0};
  // {00110110 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {108, 45, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {20, 5, 12, 0};
  // {00000010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 48, 0, 0};
  // {01111010 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {94, 45, 0, 0};
  // {11110011 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-49, 51, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_1_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 14998.5f ? 
                    -0.12812668f : 
                    -0.12929833f) : 
                 (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2010.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.122287504f : 
                        -0.02511133f) : 
                     (data[29 /* vehicle_claim */] < 33167.5f ? 
                        -0.13035429f : 
                        0.14958437f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.023300625f : 
                        0.13459706f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        0.15565543f : 
                        0.28443512f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                    -0.12812668f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.11426181f : 
                        0.02623102f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
            0.10264989f : 
             (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1404.4083f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                    0.27438644f : 
                    0.32994393f) : 
                0.14761573f)));
    return pred;
  } // constant pool size = 116B, number of visited nodes = 16, static init size = 300B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 9, 0};
  // {11010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {75, 0, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-123, -44, 9, 0};
  // {10111011 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-35, 27, 0, 0};
  // {01111000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {30, 24, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {20, 5, 12, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {72, 54, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {61, 0, 0, 0};
  // {01011101 11101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-70, 55, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_2_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.00798911f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.12521705f : 
                        -0.06484494f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10668071f : 
                        0.059912328f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        0.035926513f : 
                        0.19805221f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.07449385f : 
                        0.21078263f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                    -0.12474422f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.083318f : 
                        0.06992483f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                -0.053386465f : 
                0.23709795f) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.18176752f : 
                0.27380908f)));
    return pred;
  } // constant pool size = 122B, number of visited nodes = 15, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 00000101 10000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -96, 1, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {40, 0, 0, 0};
  // {01000010 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {66, 16, 0, 0};
  // {10100111 00101011 10110000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-27, -44, 13, 0};
  // {10100011 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-59, 16, 0, 0};
  // {01110110 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {110, 47, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 5, 12, 0};
  // {00000010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {64, 48, 0, 0};
  // {01101000 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {22, 45, 0, 0};
  // {10110001 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-115, 60, 0, 0};
  // {01111100 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {62, 32, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_3_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.0071564233f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.1233979f : 
                        -0.12200041f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10273914f : 
                        5.774774E-4f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[11])) ? 
                        0.018967215f : 
                        0.13180229f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        0.102653764f : 
                        0.20124166f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.12339654f : 
                        -0.06502618f) : 
                     (Double.isNaN(data[1]) || data[1 /* age */] < 37.5f ? 
                        -0.12645474f : 
                        0.12613462f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
            0.07016638f : 
             (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                0.1025078f : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                    0.19759263f : 
                    0.2428382f))));
    return pred;
  } // constant pool size = 126B, number of visited nodes = 16, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 1, 0};
  // {11101011 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-41, 63, 0, 0};
  // {01010100 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {42, 16, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-123, -44, 9, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {22, 0, 0, 0};
  // {11111000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {31, 24, 0, 0};
  // {00100000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 4, 0};
  // {10000000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 44, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {61, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {9, 0, 0, 0};
  // {10011101 11101100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-71, 55, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_4_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (data[0 /* months_as_customer */] < 64.0f ? 
                    -0.12141826f : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.120693356f : 
                        -0.11936765f)) : 
                 (Double.isNaN(data[3 /* policy_csl */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                     (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                        -0.12238029f : 
                        -0.026536083f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.12247003f : 
                        0.069285676f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                     (data[0 /* months_as_customer */] < 80.5f ? 
                        -0.11946539f : 
                        0.08345658f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.060973942f : 
                        0.15981624f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.12046716f : 
                        -0.11930668f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.105101325f : 
                        0.030729337f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
            0.053701125f : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.079135515f : 
                 (Double.isNaN(data[1]) || data[1 /* age */] < 44.5f ? 
                     (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[19])) ? 
                        0.20513715f : 
                        0.23251483f) : 
                    0.16955665f))));
    return pred;
  } // constant pool size = 143B, number of visited nodes = 19, static init size = 390B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 9, 0};
  // {11101011 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-41, 63, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {11001011 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-45, 35, 0, 0};
  // {11110110 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {111, 41, 0, 0};
  // {10100111 11101011 10110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-27, -41, 13, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 5, 12, 0};
  // {01111111 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-2, 19, 0, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {72, 54, 0, 0};
  // {01111010 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {94, 47, 0, 0};
  // {11110101 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-81, 51, 0, 0};
  // {01011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {58, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_5_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.012191334f : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.120390445f : 
                        -0.117493615f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.11058304f : 
                        -0.017866472f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[11])) ? 
                     (data[23 /* bodily_injuries */] < 0.5f ? 
                        -0.0342376f : 
                        0.0872103f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        0.052243527f : 
                        0.1877434f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[20 /* incident_hour_of_the_day */] < 3.5f ? 
                        -0.029366832f : 
                        -0.10970269f) : 
                     (Double.isNaN(data[1]) || data[1 /* age */] < 37.5f ? 
                        -0.12248105f : 
                        0.11215726f)))) : 
         (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                -0.0061144824f : 
                 (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 61098.5f ? 
                    0.21438521f : 
                    0.06026999f)) : 
            0.19252737f));
    return pred;
  } // constant pool size = 111B, number of visited nodes = 16, static init size = 270B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010111 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-21, 16, 0, 0};
  // {01111111 10111010 11110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 93, 15, 0};
  // {10000000 00010101 10000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, -88, 1, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {22, 0, 0, 0};
  // {01111010 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {94, 41, 0, 0};
  // {00100000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 0, 4, 0};
  // {00101000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 13, 0, 0};
  // {10111001 10001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-99, 49, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_6_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[0 /* months_as_customer */] < 32.0f ? 
                0.00763462f : 
                 (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2005.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.11746864f : 
                        -0.027246885f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10653037f : 
                        0.01350456f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (data[27 /* injury_claim */] < 4999.5f ? 
                        0.17562284f : 
                        0.029360913f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        0.082880154f : 
                        0.19108792f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[20 /* incident_hour_of_the_day */] < 3.5f ? 
                        -0.11670307f : 
                        -0.11562343f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.089918405f : 
                        0.035815157f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
            0.03677573f : 
             (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1404.4083f ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                    0.13748224f : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        0.17230782f : 
                        0.1962394f)) : 
                0.060312595f)));
    return pred;
  } // constant pool size = 120B, number of visited nodes = 17, static init size = 300B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00010101 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, -88, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {74, 0, 0, 0};
  // {00101100 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {52, 52, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {20, 5, 12, 0};
  // {00101000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {20, 44, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {61, 0, 0, 0};
  // {10011111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-7, 62, 0, 0};
  // {11010111 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-21, 19, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_7_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 15248.5f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.1168328f : 
                        -0.11416373f) : 
                    -0.041257624f) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.11802918f : 
                        -0.036163405f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.044406306f : 
                        0.16881137f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[11])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.028587384f : 
                        0.07586877f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        0.040407468f : 
                        0.15792643f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.115936294f : 
                        -0.05260785f) : 
                    0.043139905f))) : 
         (data[20 /* incident_hour_of_the_day */] < 12.0f ? 
             (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[19])) ? 
                0.09909685f : 
                0.18743105f) : 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                -0.024221987f : 
                0.16764544f)));
    return pred;
  } // constant pool size = 135B, number of visited nodes = 17, static init size = 390B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01000101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -94, 9, 0};
  // {01111111 11101111 11100000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, -9, 7, 0};
  // {01001011 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-46, 39, 0, 0};
  // {00000000 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 0, 8, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {74, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {22, 0, 0, 0};
  // {11100111 10101001 10110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-25, -107, 13, 0};
  // {01111010 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {94, 41, 0, 0};
  // {00000000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 0, 4, 0};
  // {00010010 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {72, 22, 0, 0};
  // {01011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {58, 0, 0, 0};
  // {00011010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {88, 13, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_8_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.021247363f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.114221595f : 
                        -0.06366835f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.10323715f : 
                        0.007881879f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (data[27 /* injury_claim */] < 4999.5f ? 
                        0.14996487f : 
                        0.019806148f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        0.061369732f : 
                        0.15821195f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.113331355f : 
                        -0.1124995f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.09664656f : 
                        0.043648243f)))) : 
         (data[13 /* capital-loss */] < -12150.5f ? 
             (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                0.110180706f : 
                0.17589222f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                -0.051894534f : 
                0.14441228f)));
    return pred;
  } // constant pool size = 121B, number of visited nodes = 16, static init size = 330B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010101 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-85, 16, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {32, 0, 0, 0};
  // {10000000 01010100 10000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 42, 1, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {74, 0, 0, 0};
  // {10101100 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {53, 52, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {20, 5, 12, 0};
  // {11101101 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-73, 41, 0, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {72, 54, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {5, 0, 0, 0};
  // {01001000 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {18, 15, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_9_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[0 /* months_as_customer */] < 32.0f ? 
                0.015810108f : 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[19])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                        -0.113741934f : 
                        -0.05028089f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                        -0.11357811f : 
                        0.027543874f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[11])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        -0.026639754f : 
                        0.07378864f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.03174403f : 
                        0.137604f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2013.5f ? 
                        -0.08891203f : 
                        0.023650113f) : 
                    0.044216532f))) : 
         (data[20 /* incident_hour_of_the_day */] < 12.0f ? 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                0.08534934f : 
                0.165254f) : 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                -0.028758572f : 
                0.15111718f)));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 15, static init size = 300B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {96, 0, 0, 0};
  // {00001010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {80, 4, 0, 0};
  // {01000001 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-126, 51, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {22, 0, 0, 0};
  // {10100111 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-27, 37, 0, 0};
  // {01111010 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {94, 41, 0, 0};
  // {00000000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 0, 4, 0};
  // {11001101 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-77, 54, 0, 0};
  // {00011010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {88, 13, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_10_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (!Double.isNaN(data[3 /* policy_csl */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.11920331f : 
                        -0.113083966f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.11235486f : 
                        -0.1101523f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2012.5f ? 
                        -0.11099928f : 
                        -0.028199991f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.0666199f : 
                        0.10687779f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.111892894f : 
                        0.049685087f) : 
                     (data[20 /* incident_hour_of_the_day */] < 2.5f ? 
                        -0.03985162f : 
                        0.090593055f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.120301284f : 
                        -0.110472545f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.09538263f : 
                        0.036319003f)))) : 
         (data[13 /* capital-loss */] < -12150.5f ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                0.081005685f : 
                0.15809938f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                -0.05192649f : 
                0.12677442f)));
    return pred;
  } // constant pool size = 148B, number of visited nodes = 19, static init size = 420B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {01111111 10101010 01110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 85, 14, 0};
  // {10001101 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-79, 47, 0, 0};
  // {10110110 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {109, 63, 0, 0};
  // {10000000 01000101 10010000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, -94, 9, 0};
  // {01001010 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {82, 7, 0, 0};
  // {10100111 10101011 10110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-27, -43, 13, 0};
  // {10111010 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {93, 31, 0, 0};
  // {10101001 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-107, 44, 0, 0};
  // {11010111 01011111 11010000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-21, -6, 11, 0};
  // {00101000 10100000 00100000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {20, 5, 4, 0};
  // {10011000 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {25, 36, 0, 0};
  // {01001000 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {18, 15, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_11_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.025925595f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.11105814f : 
                        -0.053727865f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.08822982f : 
                        0.033088285f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[11])) ? 
                     (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.045615032f : 
                        0.12188081f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.025496824f : 
                        0.11132817f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                     (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[19])) ? 
                        -0.11336274f : 
                        -0.04793686f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.05561868f : 
                        0.13144049f)))) : 
         (data[20 /* incident_hour_of_the_day */] < 12.0f ? 
             (data[20 /* incident_hour_of_the_day */] < 3.5f ? 
                0.07743134f : 
                0.15349418f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                -0.071459234f : 
                0.10293957f)));
    return pred;
  } // constant pool size = 121B, number of visited nodes = 16, static init size = 330B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010101 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-85, 16, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {32, 0, 0, 0};
  // {10000000 00010100 10000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 40, 1, 0};
  // {01101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {54, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {9, 0, 0, 0};
  // {01101110 10101011 00110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {118, -43, 12, 0};
  // {00101000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 44, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {34, 0, 0, 0};
  // {00000000 10000000 00100000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 1, 4, 0};
  // {00111111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-4, 13, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_12_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18631.5f ? 
             (data[16 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2005.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.110916466f : 
                        -0.014746672f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.09381357f : 
                        0.039091565f)) : 
                 (data[16 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        0.010733501f : 
                        0.0779735f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.111242756f : 
                        -0.0257768f))) : 
            0.14036354f) : 
         (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 60425.5f ? 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                0.05060901f : 
                0.15285955f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                -0.078282945f : 
                0.11704524f)));
    return pred;
  } // constant pool size = 85B, number of visited nodes = 12, static init size = 210B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {66, 0, 0, 0};
  // {10000000 00010101 10010000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, -88, 9, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {74, 0, 0, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {72, 54, 0, 0};
  // {10001111 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-15, 61, 0, 0};
  // {01111000 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {30, 47, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_13_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (!Double.isNaN(data[3 /* policy_csl */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.1156189f : 
                        -0.10947678f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.109354615f : 
                        -0.10741367f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 14331.5f ? 
                        -0.10852756f : 
                        -0.0038351188f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.11124751f : 
                        0.09530567f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11296.0f ? 
                        0.02569245f : 
                        -0.12299855f) : 
                     (data[13 /* capital-loss */] < -20694.5f ? 
                        0.10813715f : 
                        0.015856992f)) : 
                 (data[5 /* policy_annual_premium */] < 1111.1375f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.10845004f : 
                        0.21276541f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                        -0.111456744f : 
                        0.021763919f)))) : 
         (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[18])) ? 
             (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                    -0.15063363f : 
                    -0.01306366f) : 
                0.100016356f) : 
             (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[11])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                    -0.07340004f : 
                     (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        -0.009759631f : 
                        0.1294835f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[30])) ? 
                     (data[24 /* witnesses */] < 0.5f ? 
                        -0.025762513f : 
                        0.1284954f) : 
                     (data[1 /* age */] < 39.5f ? 
                        0.20775291f : 
                        0.13127297f)))));
    return pred;
  } // constant pool size = 187B, number of visited nodes = 25, static init size = 510B
  // {00100110 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {100, 0, 8, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {01111111 10101010 01100000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 85, 6, 0};
  // {10001100 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {49, 47, 0, 0};
  // {10110110 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {109, 57, 0, 0};
  // {10000000 01000101 10000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, -94, 1, 0};
  // {01001011 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-46, 39, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {22, 0, 0, 0};
  // {00001000 00100000 00100000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {16, 4, 4, 0};
  // {00000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 4, 0, 0};
  // {10111110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {125, 0, 0, 0};
  // {00010100 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {40, 34, 0, 0};
  // {00001000 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {16, 30, 0, 0};
  // {01100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {38, 0, 0, 0};
  // {01110001 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-114, 37, 0, 0};
  // {10110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {77, 0, 0, 0};
  // {10010110 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {105, 30, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_14_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18631.5f ? 
             (data[16 /* incident_severity */] < 1.5f ? 
                 (data[0 /* months_as_customer */] < 32.0f ? 
                    0.037789986f : 
                     (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[19])) ? 
                        -0.09127591f : 
                        -0.033703957f)) : 
                 (data[16 /* incident_severity */] < 2.5f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.0035184121f : 
                        0.06087337f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.109827f : 
                        -0.019975884f))) : 
            0.1263753f) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
            -0.0022060256f : 
             (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1404.4083f ? 
                 (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                    0.094185956f : 
                    0.13663547f) : 
                0.0066606165f)));
    return pred;
  } // constant pool size = 76B, number of visited nodes = 11, static init size = 180B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {96, 0, 0, 0};
  // {10100111 00101011 10110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-27, -44, 13, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {72, 54, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {61, 0, 0, 0};
  // {01011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {58, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_15_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18146.5f ? 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                     (!Double.isNaN(data[22 /* property_damage */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && (data[22] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[22])) ? 
                        -0.15894143f : 
                        -0.089916624f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.093367934f : 
                        0.0035120815f)) : 
                 (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.05901212f : 
                        0.040384967f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        0.0012808007f : 
                        0.095982f))) : 
            0.10039449f) : 
         (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[18])) ? 
             (data[29 /* vehicle_claim */] < 42455.0f ? 
                -0.118103564f : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                    -0.036495183f : 
                    0.11366562f)) : 
             (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[11])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                    -0.086958215f : 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        0.013883028f : 
                        0.1311562f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[30])) ? 
                     (data[1 /* age */] < 36.5f ? 
                        -0.028120922f : 
                        0.12177317f) : 
                     (data[1 /* age */] < 39.5f ? 
                        0.19222884f : 
                        0.123780884f)))));
    return pred;
  } // constant pool size = 144B, number of visited nodes = 18, static init size = 420B
  // {00100110 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {100, 0, 8, 0};
  // {10000000 10100111 10100000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -27, 5, 0};
  // {11101010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {87, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {3, 0, 0, 0};
  // {00111110 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {124, 28, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {60, 0, 0, 0};
  // {01000101 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-94, 34, 0, 0};
  // {00011000 10001000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {24, 17, 0, 0};
  // {10111110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {125, 0, 0, 0};
  // {00100100 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {36, 35, 0, 0};
  // {01100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {38, 0, 0, 0};
  // {01110011 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-50, 37, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {13, 0, 0, 0};
  // {10010110 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {105, 30, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_16_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2010.5f ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 13684.5f ? 
                        -0.10955633f : 
                        0.003688202f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                        -0.08645664f : 
                        0.11670136f)) : 
                 (data[13 /* capital-loss */] < -54681.5f ? 
                    0.14336461f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.11002722f : 
                        0.018430704f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.010702773f : 
                        0.1487483f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        0.0032006358f : 
                        0.11056223f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.10761438f : 
                        -0.10605742f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.068561696f : 
                        0.07109154f)))) : 
         (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
            -5.56156E-4f : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                0.0067004026f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                    0.12362467f : 
                    0.14202902f))));
    return pred;
  } // constant pool size = 139B, number of visited nodes = 18, static init size = 390B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {75, 0, 0, 0};
  // {01001010 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {82, 3, 0, 0};
  // {10000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-127, 1, 0, 0};
  // {00110110 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {108, 33, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {64, 0, 0, 0};
  // {10011100 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {57, 60, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 5, 12, 0};
  // {11101101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-73, 9, 0, 0};
  // {00010010 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {72, 52, 0, 0};
  // {11111001 10001100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-97, 49, 0, 0};
  // {01111101 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-66, 47, 0, 0};
  // {01000101 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-94, 34, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_17_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18146.5f ? 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11129.5f ? 
                 (Double.isNaN(data[28]) || data[28 /* property_claim */] < 10782.5f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.034461997f : 
                        0.027733134f) : 
                    0.102828264f) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.1594507f : 
                        -0.03599444f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.04501788f : 
                        0.20359696f))) : 
            0.090074345f) : 
         (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[11])) ? 
             (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                    -0.14750826f : 
                     (!Double.isNaN(data[22 /* property_damage */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && (data[22] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                        -0.0748861f : 
                        0.05985822f)) : 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[19])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.079484165f : 
                        0.1091825f) : 
                    0.12875871f)) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                 (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[18])) ? 
                    -0.07326253f : 
                    0.106735684f) : 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                     (data[0 /* months_as_customer */] < 176.0f ? 
                        0.014467779f : 
                        0.13776453f) : 
                    0.18619129f))));
    return pred;
  } // constant pool size = 144B, number of visited nodes = 18, static init size = 420B
  // {00100110 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {100, 0, 8, 0};
  // {00000000 00101011 10100000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, -44, 5, 0};
  // {00100000 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 48, 0, 0};
  // {00000001 11110110 00100000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 111, 4, 0};
  // {10000000 11000101 01100000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, -93, 6, 0};
  // {01100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {38, 0, 0, 0};
  // {01110001 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-114, 35, 0, 0};
  // {11001010 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {83, 29, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {6, 0, 0, 0};
  // {11001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {19, 0, 0, 0};
  // {01100000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 10, 0, 0};
  // {00111111 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-4, 34, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {97, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {10, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_18_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (!Double.isNaN(data[3 /* policy_csl */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.11412036f : 
                        -0.10908565f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.10858762f : 
                        -0.10558837f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[0 /* months_as_customer */] < 64.0f ? 
                        -0.10878493f : 
                        -0.10578188f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.021271357f : 
                        0.13018228f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.13744125f : 
                        0.015971584f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                        -0.03938621f : 
                        0.07528524f)) : 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* capital-gains */] < 63181.5f ? 
                        -0.10890363f : 
                        0.021406567f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        -0.07563091f : 
                        0.1272648f)))) : 
         (data[13 /* capital-loss */] < -18226.5f ? 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                        -0.1158482f : 
                        0.058444537f) : 
                    0.09186178f) : 
                0.15787974f) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[30])) ? 
                -0.06963344f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                     (Double.isNaN(data[25 /* police_report_available */]) || !GenModel.bitSetIsInRange(32, 0, data[25]) || (data[25] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[25])) ? 
                        -0.087215394f : 
                        0.049372982f) : 
                     (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[17])) ? 
                        0.03960694f : 
                        0.13257042f)))));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 24, static init size = 570B
  // {00100110 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {100, 0, 8, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {01111111 11111010 01100000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 95, 6, 0};
  // {10101100 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {53, 47, 0, 0};
  // {10110111 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-19, 57, 0, 0};
  // {10000000 01010101 10000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, -86, 1, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {98, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {22, 0, 0, 0};
  // {10111101 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-67, 54, 0, 0};
  // {10110111 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-19, 61, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {48, 0, 0, 0};
  // {00000010 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 38, 0, 0};
  // {00110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {76, 0, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {96, 0, 0, 0};
  // {11010110 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {107, 27, 0, 0};
  // {01110101 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-82, 39, 0, 0};
  // {01101010 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {86, 38, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {1, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {5, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_19_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                        -0.14553711f : 
                        -0.052859597f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.0754138f : 
                        0.035310447f)) : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[14 /* incident_type */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[14])) ? 
                        -0.13248478f : 
                        -0.023869116f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        -0.0053166603f : 
                        0.16329795f))) : 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[18])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.06122261f : 
                        0.06697374f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                        -0.046505906f : 
                        0.06582452f)) : 
                 (data[28 /* property_claim */] < 5382.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.113717474f : 
                        0.038343225f) : 
                     (Double.isNaN(data[0]) || data[0 /* months_as_customer */] < 415.5f ? 
                        0.07391159f : 
                        -0.06788882f)))) : 
        0.09525223f);
    return pred;
  } // constant pool size = 131B, number of visited nodes = 16, static init size = 390B
  // {10100110 10100111 10110000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, -27, 13, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {64, 0, 0, 0};
  // {11001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {83, 0, 0, 0};
  // {10110110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {109, 0, 0, 0};
  // {10100000 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {5, 56, 0, 0};
  // {00011110 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {120, 56, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {11, 0, 0, 0};
  // {01011001 11101100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-102, 55, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {60, 0, 0, 0};
  // {01110101 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-82, 34, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {32, 0, 0, 0};
  // {01110011 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-50, 45, 0, 0};
  // {10110011 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-51, 48, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_20_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[11])) ? 
                        -0.15805626f : 
                        -0.12477049f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.09939157f : 
                        0.020989167f)) : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.15304844f : 
                        -0.07239496f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        -0.09221023f : 
                        0.08612306f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                     (data[1 /* age */] < 30.5f ? 
                        -0.13053451f : 
                        -0.023293855f) : 
                     (Double.isNaN(data[29]) || data[29 /* vehicle_claim */] < 49751.5f ? 
                        -0.0186543f : 
                        0.16127168f)) : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.063113615f : 
                        0.09936895f) : 
                     (Double.isNaN(data[6]) || data[6 /* umbrella_limit */] < 1054688.0f ? 
                        0.02437992f : 
                        0.10473398f)))) : 
        0.08695459f);
    return pred;
  } // constant pool size = 126B, number of visited nodes = 16, static init size = 360B
  // {10100110 10100111 10110000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, -27, 13, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {98, 0, 0, 0};
  // {11111110 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {127, 53, 0, 0};
  // {01110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {46, 0, 0, 0};
  // {00010001 00001000 01000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 16, 2, 0};
  // {00011110 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {120, 60, 0, 0};
  // {01111100 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {62, 26, 0, 0};
  // {11100010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {71, 63, 0, 0};
  // {11110111 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-17, 37, 0, 0};
  // {00011000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {24, 5, 0, 0};
  // {11111011 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-33, 50, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {96, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_21_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
         (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
             (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.13286889f : 
                        -0.049740158f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.081701994f : 
                        0.1105073f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.09375449f : 
                        0.0733676f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.015948f : 
                        0.14128162f))) : 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[17])) ? 
                        -0.15741034f : 
                        -0.10694563f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.059608858f : 
                        0.13050237f)) : 
                 (data[16 /* incident_severity */] < 1.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                        -0.09313889f : 
                        0.08949494f) : 
                     (Double.isNaN(data[16]) || data[16 /* incident_severity */] < 2.5f ? 
                        0.10791723f : 
                        -0.0036741504f)))) : 
         (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[30])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 12915.0f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        -0.16556013f : 
                        -0.058398962f) : 
                    0.05619065f) : 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[10])) ? 
                        -0.13719629f : 
                        -0.10544234f) : 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[8])) ? 
                        0.055511545f : 
                        0.1686454f))) : 
             (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[11])) ? 
                -0.0446062f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[10])) ? 
                     (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT22, 32, 0, data[18])) ? 
                        0.02846342f : 
                        0.14232014f) : 
                    0.2033268f))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 26, static init size = 690B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {11110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {79, 0, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {97, 0, 0, 0};
  // {00001100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {48, 4, 0, 0};
  // {01011011 11010001 10000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-38, -117, 1, 0};
  // {01000110 00000010 01100000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {98, 64, 6, 0};
  // {00000001 10001100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-128, 49, 0, 0};
  // {00100101 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-92, 36, 0, 0};
  // {00011100 00110100 10000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {56, 44, 1, 0};
  // {10010110 10101110 00110000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {105, 117, 12, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {66, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {13, 0, 0, 0};
  // {10001010 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {81, 12, 0, 0};
  // {11100000 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {7, 16, 0, 0};
  // {00010110 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {104, 18, 0, 0};
  // {01000100 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {34, 63, 0, 0};
  // {10101101 11111001 11010000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-75, -97, 11, 0};
  // {11101111 00000111 10000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-9, -32, 1, 0};
  // {00000000 00011000 01010000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {0, 24, 10, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {33, 0, 0, 0};
  // {11101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {23, 0, 0, 0};
  // {10100000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {5, 9, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT22 = new byte[] {11, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_22_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                        -0.10809239f : 
                        -0.012493608f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.1075215f : 
                        0.15758875f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.11196796f : 
                        -0.10555193f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.1052962f : 
                        0.20359632f))) : 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 8784.5f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                    0.045269668f : 
                    0.14651674f) : 
                -0.08022378f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.11326798f : 
                        0.11686525f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.016395988f : 
                        0.13274068f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                    -0.09984088f : 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[11])) ? 
                        -0.031280115f : 
                        0.06567796f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[19])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        -0.11315272f : 
                        -0.06953825f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.1057328f : 
                        0.15658388f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[30])) ? 
                    -0.036682263f : 
                    0.122061506f))));
    return pred;
  } // constant pool size = 189B, number of visited nodes = 23, static init size = 570B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {66, 0, 0, 0};
  // {00000000 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 54, 0, 0};
  // {10100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-59, 0, 0, 0};
  // {11011111 11111010 11110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-5, 95, 15, 0};
  // {00000001 01000101 00010000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-128, -94, 8, 0};
  // {11001101 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-77, 58, 0, 0};
  // {10111010 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {93, 58, 0, 0};
  // {10100000 01100010 00100000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {5, 70, 4, 0};
  // {01111001 11001101 00010000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-98, -77, 8, 0};
  // {01110111 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-18, 63, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {22, 0, 0, 0};
  // {00000110 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {96, 0, 4, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {48, 0, 0, 0};
  // {11110111 11011111 11100000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-17, -5, 7, 0};
  // {00001000 00100000 00010000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {16, 4, 8, 0};
  // {00111000 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {28, 38, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_23_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                     (Double.isNaN(data[16]) || data[16 /* incident_severity */] < 1.5f ? 
                        -0.10664574f : 
                        -0.11578002f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.12077708f : 
                        0.11947814f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (Double.isNaN(data[25 /* police_report_available */]) || !GenModel.bitSetIsInRange(32, 0, data[25]) || (data[25] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[25])) ? 
                        -0.048169076f : 
                        0.049831733f) : 
                    0.106706224f)) : 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.08328024f : 
                        0.012837855f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                        -0.044984393f : 
                        0.052529693f)) : 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.07803597f : 
                        0.040120363f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.03026621f : 
                        0.15572219f)))) : 
        0.078414306f);
    return pred;
  } // constant pool size = 127B, number of visited nodes = 15, static init size = 390B
  // {10100110 10101111 10110000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, -11, 13, 0};
  // {00111100 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {60, 28, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {00011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {24, 2, 0, 0};
  // {10000000 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 16, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {60, 0, 0, 0};
  // {01110101 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-82, 34, 0, 0};
  // {10100010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {69, 2, 0, 0};
  // {01110011 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-50, 45, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {22, 0, 0, 0};
  // {01111111 01111010 11110000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-2, 94, 15, 0};
  // {10000000 00000100 00010000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 32, 8, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_24_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10825907f : 
                        -0.10502802f) : 
                    0.015445574f) : 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.107856356f : 
                        0.04611741f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.10486979f : 
                        0.13040005f))) : 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 8784.5f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                    0.04105003f : 
                    0.1386689f) : 
                -0.075568855f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.0794175f : 
                        0.09161784f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.035500675f : 
                        0.14968054f)) : 
                 (Double.isNaN(data[22 /* property_damage */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (data[22] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[22]) && (data[22] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[22])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                        -0.10169617f : 
                        0.010894849f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.0098758815f : 
                        0.14007027f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[19])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        -0.10751396f : 
                        0.0073829684f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        -0.105007716f : 
                        0.12604645f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[9])) ? 
                        -0.09427287f : 
                        0.087247536f) : 
                    0.14601992f))));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 24, static init size = 570B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {66, 0, 0, 0};
  // {01111111 10111010 11110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 93, 15, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {40, 0, 0, 0};
  // {01000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 6, 0, 0};
  // {10000000 00010101 00010000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, -88, 8, 0};
  // {11001111 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-13, 56, 0, 0};
  // {10111000 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {29, 58, 0, 0};
  // {10100000 01100010 00110000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {5, 70, 12, 0};
  // {01011001 00101101 00010000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-102, -76, 8, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {01110111 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-18, 45, 0, 0};
  // {11010110 01110011 11110000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {107, -50, 15, 0};
  // {00000110 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {96, 0, 4, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {48, 0, 0, 0};
  // {00100000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {4, 1, 0, 0};
  // {00001000 00100000 00010000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {16, 4, 8, 0};
  // {00011000 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {24, 38, 0, 0};
  // {01010010 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {74, 40, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_25_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[11])) ? 
             (data[4 /* policy_deductable */] < 752.0f ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.12855661f : 
                        -0.034025256f) : 
                     (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                        -0.08141752f : 
                        0.06960545f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.059243273f : 
                        0.03689855f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.011440193f : 
                        0.12088561f))) : 
             (Double.isNaN(data[20]) || data[20 /* incident_hour_of_the_day */] < 20.5f ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                     (data[28 /* property_claim */] < 6354.5f ? 
                        -0.084991515f : 
                        0.04222502f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        0.028658658f : 
                        0.12869987f)) : 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                    -0.15823428f : 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        -0.11777762f : 
                        0.07804771f)))) : 
        0.070884675f);
    return pred;
  } // constant pool size = 117B, number of visited nodes = 15, static init size = 330B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {10100111 00110000 10110000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-27, 12, 13, 0};
  // {01100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {70, 0, 0, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {57, 0, 0, 0};
  // {10000110 10001011 10000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {97, -47, 1, 0};
  // {10100000 00101000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {5, 20, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {44, 0, 0, 0};
  // {00011010 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {88, 18, 0, 0};
  // {01001000 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {18, 37, 0, 0};
  // {01111111 01101111 00110000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-2, -10, 12, 0};
  // {11001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {51, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_26_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2011.5f ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 17776.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
                     (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                        -0.0758444f : 
                        -0.006989963f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.002950291f : 
                        0.1258871f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (Double.isNaN(data[2 /* policy_state */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                        -0.04836582f : 
                        0.07041948f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.006327921f : 
                        0.09742506f))) : 
            0.06402375f) : 
         (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
             (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                    -0.14387174f : 
                    -0.06479095f) : 
                0.06872719f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                    -0.12215618f : 
                    0.07543471f) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                     (data[28 /* property_claim */] < 7767.5f ? 
                        0.12645276f : 
                        -0.01083964f) : 
                    0.18101051f))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 16, static init size = 390B
  // {10100110 00000100 00100000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, 32, 4, 0};
  // {11100000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 9, 0, 0};
  // {10010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {73, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {16, 0, 0, 0};
  // {00111010 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {92, 36, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {11001100 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {51, 53, 0, 0};
  // {00101101 10110011 11010000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-76, -51, 11, 0};
  // {00100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {36, 0, 0, 0};
  // {10110111 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-19, 51, 0, 0};
  // {01111111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-2, 4, 0, 0};
  // {10110101 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-83, 16, 0, 0};
  // {00010001 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-120, 37, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_27_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (Double.isNaN(data[6]) || data[6 /* umbrella_limit */] < 5484375.5f ? 
                        -0.10702873f : 
                        -0.014651535f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10588947f : 
                        0.10572314f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.10996775f : 
                        -0.10431536f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.10417505f : 
                        0.15350586f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                -0.055765685f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                    0.07418868f : 
                    0.13910775f))) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[28 /* property_claim */] < 4515.5f ? 
                0.12886132f : 
                 (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1618.4044f ? 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.011238969f : 
                        0.044359945f) : 
                    0.12159796f)) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                 (data[29 /* vehicle_claim */] < 40396.5f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.10423416f : 
                        0.111642085f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.11357591f : 
                        -0.10457456f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.07927353f : 
                        0.076328486f) : 
                    0.113210924f))));
    return pred;
  } // constant pool size = 161B, number of visited nodes = 21, static init size = 450B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {00010100 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {40, 18, 0, 0};
  // {10100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-59, 0, 0, 0};
  // {11011111 11111010 11110000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-5, 95, 15, 0};
  // {00010000 01000101 00010000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, -94, 8, 0};
  // {10111001 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-99, 53, 0, 0};
  // {11000000 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 50, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {74, 0, 0, 0};
  // {00001110 10000000 00100000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {112, 1, 4, 0};
  // {00100000 00100000 00010000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {4, 4, 8, 0};
  // {11011111 11011111 11100000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-5, -5, 7, 0};
  // {00001000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 12, 0, 0};
  // {01000001 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-126, 44, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_28_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (Double.isNaN(data[6]) || data[6 /* umbrella_limit */] < 5484375.5f ? 
                        -0.106362306f : 
                        -0.013300612f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.105305836f : 
                        0.09191237f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.10897613f : 
                        -0.10389051f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.103780255f : 
                        0.13607912f))) : 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 8784.5f ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                    0.045594607f : 
                    0.14110786f) : 
                -0.07720261f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[6]) || data[6 /* umbrella_limit */] < 5501954.0f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[11])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                        -0.06674239f : 
                        0.018026764f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                        0.026231308f : 
                        0.14019254f)) : 
                0.1100548f) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (data[29 /* vehicle_claim */] < 40396.5f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.10381802f : 
                        0.09730386f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.112190485f : 
                        -0.104125015f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        -0.12410104f : 
                        0.015550176f) : 
                    0.10079929f))));
    return pred;
  } // constant pool size = 170B, number of visited nodes = 22, static init size = 480B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {00010100 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {40, 18, 0, 0};
  // {10100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-59, 0, 0, 0};
  // {11011111 11111010 11110000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-5, 95, 15, 0};
  // {01000000 01000101 00010000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, -94, 8, 0};
  // {11000001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-125, 63, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {6, 0, 0, 0};
  // {11110110 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {111, 29, 0, 0};
  // {00101010 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {84, 34, 0, 0};
  // {00001110 10000000 00100000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {112, 1, 4, 0};
  // {00100000 00100000 00010000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 4, 8, 0};
  // {11011111 11011111 11100000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-5, -5, 7, 0};
  // {00000000 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 39, 0, 0};
  // {00111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {92, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_29_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* capital-loss */] < -56037.5f ? 
         (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[30])) ? 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                 (Double.isNaN(data[7 /* insured_sex */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.15556353f : 
                        -0.1084599f) : 
                    0.029931441f) : 
                0.041929293f) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.1147604f : 
                        0.08457342f) : 
                    0.10909847f) : 
                 (Double.isNaN(data[28]) || data[28 /* property_claim */] < 7212.5f ? 
                     (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                        -0.08394912f : 
                        0.101826f) : 
                    0.15002814f))) : 
         (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                 (Double.isNaN(data[16]) || data[16 /* incident_severity */] < 1.5f ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                        -0.11566468f : 
                        -0.043321922f) : 
                     (data[16 /* incident_severity */] < 2.5f ? 
                        -0.12796818f : 
                        -0.11432977f)) : 
                 (Double.isNaN(data[20]) || data[20 /* incident_hour_of_the_day */] < 20.5f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.03620091f : 
                        0.07021383f) : 
                    -0.12942292f)) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                        -0.11596451f : 
                        0.019268107f) : 
                     (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                        0.04742497f : 
                        -0.07775267f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 70069.5f ? 
                        -0.03889685f : 
                        0.07454674f) : 
                     (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[18])) ? 
                        0.06662705f : 
                        0.14503244f)))));
    return pred;
  } // constant pool size = 178B, number of visited nodes = 24, static init size = 480B
  // {11011010 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {91, 22, 0, 0};
  // {10101000 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {21, 18, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {11110111 11011010 11110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-17, 91, 15, 0};
  // {01000110 10111000 00110000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {98, 29, 12, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00001000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {16, 25, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {60, 0, 0, 0};
  // {00110111 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-20, 45, 0, 0};
  // {10111011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-35, 15, 0, 0};
  // {10111111 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-3, 29, 0, 0};
  // {10010100 10011100 00100000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {41, 57, 4, 0};
  // {01100111 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-26, 48, 0, 0};
  // {00101111 00010100 11010000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-12, 40, 11, 0};
  // {10100000 10100011 10100000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {5, -59, 5, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {13, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_30_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2011.5f ? 
         (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 67153.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.12910248f : 
                        -0.027671607f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.04980999f : 
                        0.10804696f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.04380189f : 
                        0.026192522f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.008775012f : 
                        0.09661439f))) : 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[19])) ? 
                        -0.1373635f : 
                        -0.05963646f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.045084927f : 
                        0.11941784f)) : 
                 (data[26 /* total_claim_amount */] < 76856.5f ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                        0.040773477f : 
                        0.14966483f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                        -0.124589f : 
                        0.041652266f)))) : 
         (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[30])) ? 
                    -0.13654843f : 
                    -0.04772049f) : 
                0.069149554f) : 
             (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[30])) ? 
                    -0.12007679f : 
                    0.0721088f) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[30])) ? 
                     (data[28 /* property_claim */] < 7767.5f ? 
                        0.11223699f : 
                        -0.035595164f) : 
                    0.1525167f))));
    return pred;
  } // constant pool size = 189B, number of visited nodes = 23, static init size = 570B
  // {10100111 00111001 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-27, -100, 1, 0};
  // {11000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {67, 0, 0, 0};
  // {10001111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-15, 14, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {25, 0, 0, 0};
  // {10110001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-115, 1, 0, 0};
  // {10100110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {101, 0, 0, 0};
  // {01111011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-34, 2, 0, 0};
  // {11010110 11000110 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {107, 99, 12, 0};
  // {00001000 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {16, 51, 0, 0};
  // {01101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {54, 0, 0, 0};
  // {00011000 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {24, 38, 0, 0};
  // {10101011 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-43, 38, 0, 0};
  // {11111110 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {127, 45, 0, 0};
  // {00101101 10110011 11010000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-76, -51, 11, 0};
  // {00100010 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {68, 34, 0, 0};
  // {10110111 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-19, 50, 0, 0};
  // {01111111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-2, 4, 0, 0};
  // {10110101 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-83, 16, 0, 0};
  // {00010011 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-56, 37, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_31_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.10721082f : 
                        -0.103463136f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.10453602f : 
                        0.050221954f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.10595462f : 
                        0.014298098f) : 
                    0.0852623f)) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                -0.054458663f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                    0.061805043f : 
                    0.12989642f))) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.10032087f : 
                        0.06882122f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        -0.060155645f : 
                        0.09225237f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[30])) ? 
                        -0.092798926f : 
                        0.015004846f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.016974565f : 
                        0.14137201f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                 (data[29 /* vehicle_claim */] < 40396.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                        -0.10611686f : 
                        0.102981165f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.110417955f : 
                        -0.10356126f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[18])) ? 
                        -0.12124018f : 
                        0.019440036f) : 
                    0.11516335f))));
    return pred;
  } // constant pool size = 198B, number of visited nodes = 24, static init size = 600B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {01010100 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {42, 16, 0, 0};
  // {01111111 10011010 11110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-2, 89, 15, 0};
  // {10000000 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 42, 0, 0};
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-63, 0, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {17, 0, 0, 0};
  // {10111001 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-99, 53, 0, 0};
  // {11000000 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 50, 0, 0};
  // {11110110 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {111, 57, 0, 0};
  // {01000010 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {66, 35, 0, 0};
  // {10111110 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {125, 62, 0, 0};
  // {11000001 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-125, 29, 0, 0};
  // {01110010 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {78, 45, 0, 0};
  // {10110001 10100010 01100000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-115, 69, 6, 0};
  // {00001110 10000000 00100000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {112, 1, 4, 0};
  // {00010010 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {72, 16, 0, 0};
  // {11011111 11011111 11100000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-5, -5, 7, 0};
  // {01000000 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {2, 38, 0, 0};
  // {10001110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {113, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_32_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
         (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
             (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.13053863f : 
                        -0.07441719f) : 
                     (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2008.5f ? 
                        -0.05112158f : 
                        0.10892856f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.095597096f : 
                        0.03297958f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.01956715f : 
                        0.11640933f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.12076467f : 
                        -0.07170216f) : 
                    0.047679324f) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[25 /* police_report_available */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[25])) ? 
                        -0.088177055f : 
                        0.06389564f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.05177922f : 
                        0.13266881f)))) : 
         (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 12915.0f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        -0.14825062f : 
                        -0.057571623f) : 
                    0.042301312f) : 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[30])) ? 
                        -0.11754537f : 
                        0.065140106f) : 
                     (data[1 /* age */] < 30.5f ? 
                        0.13809146f : 
                        0.055595033f))) : 
             (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[11])) ? 
                -0.08630368f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[10])) ? 
                     (Double.isNaN(data[23]) || data[23 /* bodily_injuries */] < 1.5f ? 
                        0.0813463f : 
                        -0.054505702f) : 
                    0.13036558f))));
    return pred;
  } // constant pool size = 202B, number of visited nodes = 25, static init size = 600B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {78, 0, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {97, 0, 0, 0};
  // {10001100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {49, 4, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {14, 0, 0, 0};
  // {00000001 10001100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-128, 49, 0, 0};
  // {10100111 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-27, 44, 0, 0};
  // {00011100 00110100 10000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {56, 44, 1, 0};
  // {10100110 01101110 00100000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {101, 118, 4, 0};
  // {11101011 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-41, 63, 0, 0};
  // {11000001 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-125, 56, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 0, 0, 0};
  // {10000000 00001100 00100000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 48, 4, 0};
  // {00010110 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {104, 18, 0, 0};
  // {01000100 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {34, 63, 0, 0};
  // {11101101 11111001 11010000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-73, -97, 11, 0};
  // {10101111 00000110 10000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-11, 96, 1, 0};
  // {01000000 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {2, 36, 0, 0};
  // {11111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {31, 0, 0, 0};
  // {10100000 10010001 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {5, -119, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_33_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[3 /* policy_csl */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (Double.isNaN(data[31]) || data[31 /* auto_year */] < 2012.5f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10772434f : 
                        -0.08840714f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10443734f : 
                        0.09144444f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2005.5f ? 
                        -0.10464043f : 
                        0.030111913f) : 
                    0.06679708f)) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                0.0019043328f : 
                0.114433646f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[11])) ? 
                 (data[23 /* bodily_injuries */] < 0.5f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.14717612f : 
                        -0.00392722f) : 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11690.0f ? 
                        0.06351085f : 
                        -0.058414172f)) : 
                 (Double.isNaN(data[25 /* police_report_available */]) || !GenModel.bitSetIsInRange(32, 0, data[25]) || (data[25] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[25])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.10184637f : 
                        0.045643948f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        7.207621E-4f : 
                        0.12827668f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.10973763f : 
                        -0.0888427f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.0498747f : 
                        0.05208353f)) : 
                 (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[18])) ? 
                    -0.016482893f : 
                    0.11480067f))));
    return pred;
  } // constant pool size = 170B, number of visited nodes = 22, static init size = 480B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01111111 11111010 01110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 95, 14, 0};
  // {01111101 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, 54, 0, 0};
  // {10000000 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 1, 0};
  // {10011000 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {25, 32, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {22, 0, 0, 0};
  // {01101100 11010100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {54, 43, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {11101011 11111111 00010000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-41, -1, 8, 0};
  // {11011010 10111111 00110000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {91, -3, 12, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {96, 0, 0, 0};
  // {10001001 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-111, 44, 0, 0};
  // {11010111 01011111 11110000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-21, -6, 15, 0};
  // {00000010 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {64, 22, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {97, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_34_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[11])) ? 
             (data[4 /* policy_deductable */] < 752.0f ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.09698564f : 
                        -0.011217943f) : 
                     (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                        -0.0717357f : 
                        0.07744133f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1412.77f ? 
                        0.0011239304f : 
                        -0.09168086f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        0.0055274884f : 
                        0.097415864f))) : 
             (Double.isNaN(data[20]) || data[20 /* incident_hour_of_the_day */] < 20.5f ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        -0.071851306f : 
                        0.035893105f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        0.024472354f : 
                        0.10831091f)) : 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                    -0.14072002f : 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        -0.1144646f : 
                        0.072353624f)))) : 
        0.05802139f);
    return pred;
  } // constant pool size = 117B, number of visited nodes = 15, static init size = 330B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {00100111 00110000 10110000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-28, 12, 13, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {57, 0, 0, 0};
  // {10000110 10001011 10000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {97, -47, 1, 0};
  // {00110101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-84, 0, 0, 0};
  // {00011010 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {88, 18, 0, 0};
  // {00011110 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {120, 56, 0, 0};
  // {01001000 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {18, 37, 0, 0};
  // {01111111 01101111 00110000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-2, -10, 12, 0};
  // {11001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {51, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_35_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.10712814f : 
                        -0.10334397f) : 
                     (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.107817106f : 
                        0.09630547f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.104377694f : 
                        0.061350156f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.10289409f : 
                        0.12587328f))) : 
             (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                0.006170948f : 
                0.11280589f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[19])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                        -0.034254372f : 
                        0.087100826f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                        -0.0012930976f : 
                        0.13221249f)) : 
                 (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[19])) ? 
                    -0.08348226f : 
                     (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[18])) ? 
                        -0.037612237f : 
                        0.048981626f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[11])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        -0.10830193f : 
                        -0.07916586f) : 
                     (data[27 /* injury_claim */] < 4999.5f ? 
                        0.10105013f : 
                        -0.043191154f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[9])) ? 
                        -0.08666069f : 
                        0.07114636f) : 
                    0.12593667f))));
    return pred;
  } // constant pool size = 189B, number of visited nodes = 23, static init size = 570B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {97, 0, 0, 0};
  // {01000000 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 34, 0, 0};
  // {01111111 10111010 01110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-2, 93, 14, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {6, 0, 0, 0};
  // {01000111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-30, 0, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {17, 0, 0, 0};
  // {10000000 01010001 10000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, -118, 1, 0};
  // {10101000 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {21, 32, 0, 0};
  // {00010110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {104, 0, 0, 0};
  // {11100110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {103, 8, 0, 0};
  // {10110001 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-115, 59, 0, 0};
  // {11111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {95, 0, 0, 0};
  // {10101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {53, 0, 0, 0};
  // {00000110 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {96, 0, 4, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {22, 0, 0, 0};
  // {11010111 01111111 11100000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-21, -2, 7, 0};
  // {00011000 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {24, 38, 0, 0};
  // {01010010 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {74, 40, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_36_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
         (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
             (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 13998.5f ? 
                     (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2008.5f ? 
                        -0.06518201f : 
                        0.053871527f) : 
                    -0.13707446f) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.06360868f : 
                        0.04178975f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.019045435f : 
                        0.11098819f))) : 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.13456243f : 
                        -0.07553376f) : 
                    0.04968411f) : 
                 (Double.isNaN(data[6]) || data[6 /* umbrella_limit */] < 2003906.5f ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.026570523f : 
                        0.061528493f) : 
                    0.109859765f))) : 
         (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 66368.5f ? 
             (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        -0.13778397f : 
                        -0.070522584f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.047928445f : 
                        0.1276326f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.04413337f : 
                        0.07318599f) : 
                    0.14045575f)) : 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[9])) ? 
                        -0.13140737f : 
                        0.0037507156f) : 
                    0.086647645f) : 
                 (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 79200.0f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[9])) ? 
                        0.087699175f : 
                        0.14056921f) : 
                    -0.051132374f))));
    return pred;
  } // constant pool size = 197B, number of visited nodes = 25, static init size = 570B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {78, 0, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {97, 0, 0, 0};
  // {00000100 00101000 10010000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {32, 20, 9, 0};
  // {10100101 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-91, 44, 0, 0};
  // {01110110 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {110, 29, 0, 0};
  // {10100110 01101110 00110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {101, 118, 12, 0};
  // {11101011 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-41, 31, 0, 0};
  // {11011110 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {123, 42, 0, 0};
  // {00100000 11010100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 43, 0, 0};
  // {00110101 10111001 01000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-84, -99, 2, 0};
  // {01011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {58, 0, 0, 0};
  // {00010101 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-88, 48, 0, 0};
  // {00011100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {56, 4, 0, 0};
  // {00000011 00000001 11000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-64, -128, 3, 0};
  // {10100010 11011110 00110000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {69, 123, 12, 0};
  // {00011000 10101000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {24, 21, 0, 0};
  // {10001010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {81, 1, 0, 0};
  // {00000110 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {96, 19, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_37_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (data[13 /* capital-loss */] < -70305.5f ? 
                    0.042358976f : 
                     (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                        -0.105082564f : 
                        -0.015390708f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.10383331f : 
                        0.05377829f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.1025613f : 
                        0.11132944f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                -0.0046791555f : 
                0.11156047f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[28 /* property_claim */] < 4515.5f ? 
                0.11063398f : 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (Double.isNaN(data[33]) || data[33 /* incident_month */] < 1.5f ? 
                        0.02460138f : 
                        -0.04150063f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.004876026f : 
                        0.08118839f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                     (data[13 /* capital-loss */] < -55187.5f ? 
                        -0.014899629f : 
                        -0.10548681f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        -0.10394285f : 
                        0.07067347f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.11045639f : 
                        0.031563602f) : 
                    0.10945574f))));
    return pred;
  } // constant pool size = 152B, number of visited nodes = 20, static init size = 420B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {97, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {01000111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-30, 0, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {17, 0, 0, 0};
  // {10000000 01010001 10000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, -118, 1, 0};
  // {10011000 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {25, 32, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {74, 0, 0, 0};
  // {01101010 01111001 10110000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {86, -98, 13, 0};
  // {00001110 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {112, 0, 4, 0};
  // {00000001 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-128, 36, 0, 0};
  // {00010010 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {72, 18, 0, 0};
  // {01000000 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 37, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {96, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_38_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 17435.5f ? 
             (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[11])) ? 
                 (data[4 /* policy_deductable */] < 752.0f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.10062074f : 
                        -0.023382615f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.03127383f : 
                        0.027968314f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 6548.5f ? 
                        -0.042964306f : 
                        0.043490704f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.020214716f : 
                        0.113338836f))) : 
            -0.08706312f) : 
        0.05661964f);
    return pred;
  } // constant pool size = 63B, number of visited nodes = 9, static init size = 150B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {11110111 00111101 11110000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-17, -68, 15, 0};
  // {01100001 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-122, 60, 0, 0};
  // {00010000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {8, 2, 0, 0};
  // {01000010 11101000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {66, 23, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_39_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1774.0801f ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18631.5f ? 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11135.5f ? 
                 (Double.isNaN(data[28]) || data[28 /* property_claim */] < 10788.0f ? 
                     (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[17])) ? 
                        -0.010874478f : 
                        0.039570563f) : 
                    0.08862842f) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.1384806f : 
                        -0.060381897f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.039134875f : 
                        0.08405373f))) : 
            0.051807147f) : 
        0.08113299f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 8, static init size = 120B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00110010 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {76, 56, 0, 0};
  // {11111111 11110110 11110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-1, 111, 15, 0};
  // {00010010 11000101 01110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {72, -93, 14, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_40_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.10515384f : 
                        -0.10234668f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.103941076f : 
                        0.0425181f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.10528766f : 
                        -0.102177724f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.10280444f : 
                        0.108658925f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                -0.051725883f : 
                 (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                    0.057481073f : 
                    0.11080883f))) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.06393378f : 
                        0.058753032f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.050545003f : 
                        0.12830971f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[30])) ? 
                    -0.090796866f : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.049003668f : 
                        0.033146985f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[25 /* police_report_available */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[25])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.109110914f : 
                        -0.075366266f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[30])) ? 
                        -0.06746681f : 
                        0.045596905f)) : 
                 (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[11])) ? 
                    -0.017271724f : 
                    0.11147303f))));
    return pred;
  } // constant pool size = 194B, number of visited nodes = 23, static init size = 600B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {01010100 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {42, 16, 0, 0};
  // {01111111 10001010 11110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-2, 81, 15, 0};
  // {01000010 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {66, 50, 0, 0};
  // {10100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-59, 0, 0, 0};
  // {11011111 11111010 11110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-5, 95, 15, 0};
  // {00000001 01000101 00010000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-128, -94, 8, 0};
  // {10111001 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-99, 53, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {27, 0, 0, 0};
  // {10100100 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {37, 56, 0, 0};
  // {11100011 11101001 00110000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-57, -105, 12, 0};
  // {00011001 11000110 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-104, 99, 0, 0};
  // {01111111 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-2, 61, 0, 0};
  // {00110001 10111110 11110000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-116, 125, 15, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {96, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {6, 0, 0, 0};
  // {11111111 01011111 11000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-1, -6, 3, 0};
  // {00001000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {16, 44, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {44, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_41_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
         (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
             (Double.isNaN(data[12]) || data[12 /* capital-gains */] < 42791.5f ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.12132708f : 
                        -7.132728E-5f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.01495977f : 
                        0.09648527f)) : 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 65884.5f ? 
                        -0.10742021f : 
                        -0.13754085f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.061657704f : 
                        0.09087796f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (Double.isNaN(data[21]) || data[21 /* number_of_vehicles_involved */] < 2.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.059988566f : 
                        0.05330668f) : 
                     (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.104463704f : 
                        -8.328431E-4f)) : 
                 (Double.isNaN(data[31]) || data[31 /* auto_year */] < 2007.5f ? 
                     (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        0.04396882f : 
                        0.13441259f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        -0.08621422f : 
                        0.0812458f)))) : 
         (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 66368.5f ? 
             (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                    -0.13029894f : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                        -0.12742631f : 
                        0.02130575f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[11])) ? 
                        -0.08450549f : 
                        0.076894246f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[30])) ? 
                        -0.014480559f : 
                        0.12058908f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[11])) ? 
                        -0.10442779f : 
                        -0.014784367f) : 
                    0.09893928f) : 
                 (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 79200.0f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[9])) ? 
                        0.08578574f : 
                        0.12977989f) : 
                    -0.043394726f))));
    return pred;
  } // constant pool size = 224B, number of visited nodes = 28, static init size = 660B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-34, 0, 0, 0};
  // {10011011 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-39, 40, 0, 0};
  // {11111100 01101011 10010000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {63, -42, 9, 0};
  // {01000110 10001000 01110000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {98, 17, 14, 0};
  // {01110011 01010001 11010000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-50, -118, 11, 0};
  // {00100000 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 18, 0, 0};
  // {10000100 00100110 00100000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {33, 100, 4, 0};
  // {01001010 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {82, 22, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {74, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {00101100 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {52, 52, 0, 0};
  // {01100110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {102, 0, 0, 0};
  // {11101111 00111101 10110000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-9, -68, 13, 0};
  // {10110101 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-83, 59, 0, 0};
  // {00011100 10100001 11000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {56, -123, 3, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {18, 0, 0, 0};
  // {00111111 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-4, 44, 0, 0};
  // {10100010 11001110 00110000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {69, 115, 12, 0};
  // {00000000 10101000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {0, 21, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {30, 0, 0, 0};
  // {00000110 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {96, 19, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_42_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                        -0.10401771f : 
                        -0.042318985f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.103844024f : 
                        0.093829624f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.104453705f : 
                        -0.1019489f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.10242914f : 
                        0.09741022f))) : 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 8784.5f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                    0.015470765f : 
                    0.10968853f) : 
                -0.077737965f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[28 /* property_claim */] < 4515.5f ? 
                0.10377505f : 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[33]) || data[33 /* incident_month */] < 1.5f ? 
                        0.022325886f : 
                        -0.038490728f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.003082306f : 
                        0.07535428f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.10450949f : 
                        -0.10254082f) : 
                    0.0040353932f) : 
                 (data[5 /* policy_annual_premium */] < 1111.1375f ? 
                    0.07848843f : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                        -0.098750964f : 
                        0.022534188f)))));
    return pred;
  } // constant pool size = 161B, number of visited nodes = 21, static init size = 450B
  // {00000110 00000000 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 1, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {01010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {42, 0, 0, 0};
  // {01010100 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {42, 32, 0, 0};
  // {00000010 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {64, 18, 0, 0};
  // {10100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-59, 0, 0, 0};
  // {11011111 11111010 11110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-5, 95, 15, 0};
  // {00010000 01000101 00010000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, -94, 8, 0};
  // {11001101 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-77, 58, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {74, 0, 0, 0};
  // {01101010 01111001 10110000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {86, -98, 13, 0};
  // {00101110 10100000 00100000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {116, 5, 4, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {11111111 11111111 11100000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-1, -1, 7, 0};
  // {00011101 01110100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-72, 46, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_43_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[31]) || data[31 /* auto_year */] < 2005.5f ? 
             (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                    -0.12494738f : 
                     (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                        -0.11907472f : 
                        0.027926916f)) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.07802091f : 
                        0.087048665f) : 
                     (Double.isNaN(data[33]) || data[33 /* incident_month */] < 1.5f ? 
                        0.12305377f : 
                        -0.022443091f))) : 
             (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                 (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[19])) ? 
                    -0.12516509f : 
                    -0.11108731f) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.12727226f : 
                        -0.058310628f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.08953372f : 
                        0.04494556f)))) : 
         (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[18])) ? 
             (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[19])) ? 
                 (data[1 /* age */] < 35.5f ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.10891432f : 
                        0.10433165f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                        -0.12728168f : 
                        -0.020297999f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        -0.075045116f : 
                        0.007917732f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[9])) ? 
                        -0.047658514f : 
                        0.06991222f))) : 
             (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[30])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[9])) ? 
                        -0.11344927f : 
                        0.044230588f) : 
                     (data[16 /* incident_severity */] < 1.5f ? 
                        -0.014109307f : 
                        0.073884435f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT22, 32, 0, data[30])) ? 
                        -0.099221885f : 
                        0.06401173f) : 
                    0.13274245f))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 27, static init size = 690B
  // {10100110 10101111 10010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, -11, 9, 0};
  // {10001110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {113, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {14, 0, 0, 0};
  // {01100110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {102, 0, 0, 0};
  // {00101000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {20, 5, 0, 0};
  // {00110010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {76, 4, 0, 0};
  // {11001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {83, 0, 0, 0};
  // {11001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {83, 0, 0, 0};
  // {11111110 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {127, 50, 0, 0};
  // {11010101 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-85, 47, 0, 0};
  // {00011111 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-8, 24, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {60, 0, 0, 0};
  // {10110110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {109, 0, 0, 0};
  // {00000110 10000001 10000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {96, -127, 1, 0};
  // {10100010 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {69, 50, 0, 0};
  // {01110011 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-50, 45, 0, 0};
  // {11011101 01111011 11110000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-69, -34, 15, 0};
  // {11110110 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {111, 50, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {6, 0, 0, 0};
  // {00110101 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-84, 25, 0, 0};
  // {00011000 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {24, 45, 0, 0};
  // {10000000 00000100 00010000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {1, 32, 8, 0};
  // {10011011 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT22 = new byte[] {-39, 39, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_44_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[12]) || data[12 /* capital-gains */] < 81166.5f ? 
             (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                -0.12495628f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[11])) ? 
                        -0.048698124f : 
                        0.013234258f) : 
                     (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.027136521f : 
                        0.041002117f))) : 
            0.06909661f) : 
         (Double.isNaN(data[12]) || data[12 /* capital-gains */] < 26695.5f ? 
             (data[16 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.11449784f : 
                        -0.07440522f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        -0.014853129f : 
                        0.103714466f)) : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.09587422f : 
                        0.06015306f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.031200625f : 
                        0.12236008f))) : 
             (data[12 /* capital-gains */] < 36196.5f ? 
                -0.11956492f : 
                 (Double.isNaN(data[15 /* collision_type */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[15])) ? 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 12185.5f ? 
                        -0.066485696f : 
                        0.06780656f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.0020328588f : 
                        0.112233065f)))));
    return pred;
  } // constant pool size = 139B, number of visited nodes = 18, static init size = 390B
  // {00100110 10000011 00010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {100, -63, 8, 0};
  // {11101110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {119, 0, 0, 0};
  // {10011000 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 52, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {5, 0, 0, 0};
  // {11000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {99, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {9, 0, 0, 0};
  // {00111010 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {92, 61, 0, 0};
  // {10000100 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {33, 33, 0, 0};
  // {00010111 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-24, 58, 0, 0};
  // {00111101 01111110 11110000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-68, 126, 15, 0};
  // {00000000 10000010 00010000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {0, 65, 8, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
  // {00001011 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-48, 33, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_45_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11128.5f ? 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 10824.5f ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                     (Double.isNaN(data[17 /* authorities_contacted */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (data[17] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                        -0.02081955f : 
                        0.027378397f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.022833226f : 
                        0.076600105f)) : 
                0.092368804f) : 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        -0.12536845f : 
                        -0.035172705f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.116679646f : 
                        0.023561021f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (data[20 /* incident_hour_of_the_day */] < 2.5f ? 
                        0.07802714f : 
                        -0.07709684f) : 
                    0.10793383f))) : 
        0.050968748f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 12, static init size = 240B
  // {00000100 00001001 10000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {32, -112, 1, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {11101111 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-9, 32, 0, 0};
  // {00100010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {68, 48, 0, 0};
  // {00101011 01110110 00010000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-44, 110, 8, 0};
  // {00011100 10001000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {56, 17, 0, 0};
  // {11110011 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-49, 61, 0, 0};
  // {10000010 11000101 01100000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {65, -93, 6, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_46_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (data[1 /* age */] < 25.5f ? 
                0.031221174f : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10562732f : 
                        -0.08783304f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.0817206f : 
                        0.02714994f))) : 
             (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[19])) ? 
                -7.2814873E-4f : 
                0.10837509f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (data[13 /* capital-loss */] < -21557.0f ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.034585506f : 
                        0.09888308f) : 
                     (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 77052.5f ? 
                        0.09874979f : 
                        -0.026197277f)) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.08686868f : 
                        0.009369016f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.00945242f : 
                        0.11717104f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                 (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[19])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[30])) ? 
                        -0.10497774f : 
                        -0.0114271995f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                        -0.10446414f : 
                        0.1046874f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[30])) ? 
                    -0.01585795f : 
                    0.108603865f))));
    return pred;
  } // constant pool size = 157B, number of visited nodes = 20, static init size = 450B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010101 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-85, 16, 0, 0};
  // {01111111 11111011 01110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, -33, 14, 0};
  // {10000000 01010100 10000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 42, 1, 0};
  // {11001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {19, 0, 0, 0};
  // {11100100 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {39, 56, 0, 0};
  // {01100001 00001001 10110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-122, -112, 13, 0};
  // {11000001 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-125, 29, 0, 0};
  // {01110011 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-50, 45, 0, 0};
  // {10110001 10100010 01100000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-115, 69, 6, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {96, 0, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {48, 0, 0, 0};
  // {00101001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-108, 6, 0, 0};
  // {00010010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {72, 4, 0, 0};
  // {10011001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-103, 63, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_47_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* property_claim */] < 18620.0f ? 
         (Double.isNaN(data[28]) || data[28 /* property_claim */] < 11128.5f ? 
             (Double.isNaN(data[28]) || data[28 /* property_claim */] < 10824.5f ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.04885096f : 
                        0.01334705f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                        -0.01840421f : 
                        0.048673876f)) : 
                0.08727807f) : 
             (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.12482616f : 
                        -0.10284642f) : 
                    -0.004716698f) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.05572186f : 
                        0.07177306f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        0.0075784815f : 
                        0.11688423f)))) : 
        0.04988538f);
    return pred;
  } // constant pool size = 95B, number of visited nodes = 12, static init size = 270B
  // {00100100 00101011 10110000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {36, -44, 13, 0};
  // {10011000 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {25, 15, 0, 0};
  // {01111100 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {62, 37, 0, 0};
  // {10110011 11110110 11110000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-51, 111, 15, 0};
  // {10011000 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {25, 19, 0, 0};
  // {11110010 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {79, 44, 0, 0};
  // {00100010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {68, 48, 0, 0};
  // {00000011 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-64, 0, 8, 0};
  // {01000000 10100100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 37, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_48_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (Double.isNaN(data[31]) || data[31 /* auto_year */] < 2005.5f ? 
             (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                    -0.09556456f : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                        -0.104747005f : 
                        0.06466275f)) : 
                 (data[32 /* policy_bind_year */] < 2001.5f ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.1102019f : 
                        0.058544166f) : 
                     (Double.isNaN(data[22 /* property_damage */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (data[22] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[22]) && (data[22] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[22])) ? 
                        0.029755862f : 
                        0.12234189f))) : 
             (!Double.isNaN(data[18 /* incident_state */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                 (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[19])) ? 
                    -0.12060756f : 
                    -0.109288566f) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.12110898f : 
                        -0.050044373f) : 
                     (Double.isNaN(data[28]) || data[28 /* property_claim */] < 7250.0f ? 
                        -0.105819196f : 
                        0.0370293f)))) : 
         (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[18])) ? 
             (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[19])) ? 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                        -0.12726903f : 
                        -0.06643831f) : 
                     (!Double.isNaN(data[11 /* insured_relationship */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[11])) ? 
                        -0.070691876f : 
                        0.07897788f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[30])) ? 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[11])) ? 
                        -0.0665271f : 
                        0.03575261f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[9])) ? 
                        -0.04196998f : 
                        0.06315103f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[30])) ? 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[10])) ? 
                        -0.12166873f : 
                        -0.013048609f) : 
                    0.05328566f) : 
                 (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT22, 32, 0, data[10])) ? 
                        -0.024401007f : 
                        0.05784433f) : 
                     (data[16 /* incident_severity */] < 1.5f ? 
                        0.023215313f : 
                        0.08317699f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 27, static init size = 690B
  // {10100110 10101111 10010000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {101, -11, 9, 0};
  // {10001110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {113, 0, 0, 0};
  // {01101111 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-10, 61, 0, 0};
  // {10000000 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 40, 0, 0};
  // {10101000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {21, 4, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {83, 0, 0, 0};
  // {11001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {83, 0, 0, 0};
  // {11111110 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {127, 50, 0, 0};
  // {11010101 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-85, 47, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {60, 0, 0, 0};
  // {10110110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {109, 0, 0, 0};
  // {10000110 00000001 10000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {97, -128, 1, 0};
  // {10111100 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {61, 62, 0, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {57, 0, 0, 0};
  // {01110011 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-50, 45, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {5, 0, 0, 0};
  // {11110110 01001100 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {111, 50, 0, 0};
  // {10111101 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-67, 57, 0, 0};
  // {00001010 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {80, 44, 0, 0};
  // {01011001 11111111 01110000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {-102, -1, 14, 0};
  // {01111010 10001000 00000000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {94, 17, 0, 0};
  // {00000110 10000100 00010000 00000000}
  public static final byte[] GRPSPLIT22 = new byte[] {96, 33, 8, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_49_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (data[1 /* age */] < 25.5f ? 
                0.032540854f : 
                 (Double.isNaN(data[18 /* incident_state */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (data[18] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 7) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.103934996f : 
                        -0.04796761f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10218498f : 
                        0.052265484f))) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                -0.011169572f : 
                0.1071195f)) : 
         (data[16 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[19 /* incident_city */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.12465502f : 
                        -0.013812205f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.046680994f : 
                        0.08649534f)) : 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[30])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.07355829f : 
                        0.06565773f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.023556596f : 
                        0.10309038f))) : 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[25 /* police_report_available */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[25])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.10631888f : 
                        -0.07596015f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                        -0.06997429f : 
                        0.031788886f)) : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                    -0.016639994f : 
                    0.107679985f))));
    return pred;
  } // constant pool size = 167B, number of visited nodes = 20, static init size = 510B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {96, 0, 0, 0};
  // {00010001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-120, 63, 0, 0};
  // {11000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {99, 0, 0, 0};
  // {10011000 10001000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {25, 17, 0, 0};
  // {10010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {73, 0, 0, 0};
  // {11110100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {47, 1, 0, 0};
  // {11101001 11011111 01110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-105, -5, 14, 0};
  // {10111111 00011011 11110000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-3, -40, 15, 0};
  // {00110111 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-20, 57, 0, 0};
  // {11010100 00110000 01010000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {43, 12, 10, 0};
  // {01111011 11110110 10110000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-34, 111, 13, 0};
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {96, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {6, 0, 0, 0};
  // {11111111 01011111 11000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-1, -6, 3, 0};
  // {00000010 01100100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {64, 38, 0, 0};
  // {01010000 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {10, 15, 0, 0};
}


