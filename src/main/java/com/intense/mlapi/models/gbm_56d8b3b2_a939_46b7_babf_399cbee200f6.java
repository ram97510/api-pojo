/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2024-11-13T15:34:42.552+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_56d8b3b2_a939_46b7_babf_399cbee200f6

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-56d8b3b2-a939-46b7-babf-399cbee200f6 > gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_56d8b3b2_a939_46b7_babf_399cbee200f6", algorithm="gbm")
public class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 34; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* months_as_customer */ null,
    /* age */ null,
    /* policy_state */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2.VALUES,
    /* policy_csl */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3.VALUES,
    /* policy_deductable */ null,
    /* policy_annual_premium */ null,
    /* umbrella_limit */ null,
    /* insured_sex */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7.VALUES,
    /* insured_education_level */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8.VALUES,
    /* insured_occupation */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9.VALUES,
    /* insured_hobbies */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10.VALUES,
    /* insured_relationship */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11.VALUES,
    /* capital-gains */ null,
    /* capital-loss */ null,
    /* incident_type */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14.VALUES,
    /* collision_type */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15.VALUES,
    /* incident_severity */ null,
    /* authorities_contacted */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17.VALUES,
    /* incident_state */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18.VALUES,
    /* incident_city */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19.VALUES,
    /* incident_hour_of_the_day */ null,
    /* number_of_vehicles_involved */ null,
    /* property_damage */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22.VALUES,
    /* bodily_injuries */ null,
    /* witnesses */ null,
    /* police_report_available */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25.VALUES,
    /* total_claim_amount */ null,
    /* injury_claim */ null,
    /* property_claim */ null,
    /* vehicle_claim */ null,
    /* auto_make */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30.VALUES,
    /* auto_year */ null,
    /* policy_bind_year */ null,
    /* incident_month */ null,
    /* fraud_reported */ gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.7570093457943925,0.24299065420560748};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.7570093457943925,0.24299065420560748};

  public gbm_56d8b3b2_a939_46b7_babf_399cbee200f6() { super(NAMES,DOMAINS,"fraud_reported"); }
  public String getUUID() { return Long.toString(-1168876766602264184L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_0.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_1.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_2.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_3.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_4.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_5.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_6.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_7.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_8.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_9.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_10.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_11.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_12.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_13.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_14.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_15.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_16.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_17.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_18.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_19.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_20.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_21.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_22.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_23.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_24.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_25.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_26.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_27.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_28.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_29.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_30.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_31.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_32.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_33.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_34.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_35.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_36.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_37.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_38.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_39.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_40.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_41.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_42.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_43.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_44.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_45.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_46.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_47.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_48.score0(data,preds);
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_49.score0(data,preds);
    preds[2] = preds[1] + -1.1363526166509565;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.24341407999600598);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6 implements java.io.Serializable {
  public static final String[] VALUES = new String[34];
  static {
    NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "months_as_customer";
      sa[1] = "age";
      sa[2] = "policy_state";
      sa[3] = "policy_csl";
      sa[4] = "policy_deductable";
      sa[5] = "policy_annual_premium";
      sa[6] = "umbrella_limit";
      sa[7] = "insured_sex";
      sa[8] = "insured_education_level";
      sa[9] = "insured_occupation";
      sa[10] = "insured_hobbies";
      sa[11] = "insured_relationship";
      sa[12] = "capital-gains";
      sa[13] = "capital-loss";
      sa[14] = "incident_type";
      sa[15] = "collision_type";
      sa[16] = "incident_severity";
      sa[17] = "authorities_contacted";
      sa[18] = "incident_state";
      sa[19] = "incident_city";
      sa[20] = "incident_hour_of_the_day";
      sa[21] = "number_of_vehicles_involved";
      sa[22] = "property_damage";
      sa[23] = "bodily_injuries";
      sa[24] = "witnesses";
      sa[25] = "police_report_available";
      sa[26] = "total_claim_amount";
      sa[27] = "injury_claim";
      sa[28] = "property_claim";
      sa[29] = "vehicle_claim";
      sa[30] = "auto_make";
      sa[31] = "auto_year";
      sa[32] = "policy_bind_year";
      sa[33] = "incident_month";
    }
  }
}
// The class representing column policy_state
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "IL";
      sa[1] = "IN";
      sa[2] = "OH";
    }
  }
}
// The class representing column policy_csl
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "100/300";
      sa[1] = "250/500";
      sa[2] = "500/1000";
    }
  }
}
// The class representing column insured_sex
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "FEMALE";
      sa[1] = "MALE";
    }
  }
}
// The class representing column insured_education_level
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Associate";
      sa[1] = "College";
      sa[2] = "High School";
      sa[3] = "JD";
      sa[4] = "MD";
      sa[5] = "Masters";
      sa[6] = "PhD";
    }
  }
}
// The class representing column insured_occupation
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[14];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "adm-clerical";
      sa[1] = "armed-forces";
      sa[2] = "craft-repair";
      sa[3] = "exec-managerial";
      sa[4] = "farming-fishing";
      sa[5] = "handlers-cleaners";
      sa[6] = "machine-op-inspct";
      sa[7] = "other-service";
      sa[8] = "priv-house-serv";
      sa[9] = "prof-specialty";
      sa[10] = "protective-serv";
      sa[11] = "sales";
      sa[12] = "tech-support";
      sa[13] = "transport-moving";
    }
  }
}
// The class representing column insured_hobbies
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[20];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "base-jumping";
      sa[1] = "basketball";
      sa[2] = "board-games";
      sa[3] = "bungie-jumping";
      sa[4] = "camping";
      sa[5] = "chess";
      sa[6] = "cross-fit";
      sa[7] = "dancing";
      sa[8] = "exercise";
      sa[9] = "golf";
      sa[10] = "hiking";
      sa[11] = "kayaking";
      sa[12] = "movies";
      sa[13] = "paintball";
      sa[14] = "polo";
      sa[15] = "reading";
      sa[16] = "skydiving";
      sa[17] = "sleeping";
      sa[18] = "video-games";
      sa[19] = "yachting";
    }
  }
}
// The class representing column insured_relationship
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "husband";
      sa[1] = "not-in-family";
      sa[2] = "other-relative";
      sa[3] = "own-child";
      sa[4] = "unmarried";
      sa[5] = "wife";
    }
  }
}
// The class representing column incident_type
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Multi-vehicle Collision";
      sa[1] = "Parked Car";
      sa[2] = "Single Vehicle Collision";
      sa[3] = "Vehicle Theft";
    }
  }
}
// The class representing column collision_type
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Front Collision";
      sa[1] = "Rear Collision";
      sa[2] = "Side Collision";
      sa[3] = "undocumented";
    }
  }
}
// The class representing column authorities_contacted
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Ambulance";
      sa[1] = "Fire";
      sa[2] = "Other";
      sa[3] = "Police";
    }
  }
}
// The class representing column incident_state
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NC";
      sa[1] = "NY";
      sa[2] = "OH";
      sa[3] = "PA";
      sa[4] = "SC";
      sa[5] = "VA";
      sa[6] = "WV";
    }
  }
}
// The class representing column incident_city
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Arlington";
      sa[1] = "Columbus";
      sa[2] = "Hillsdale";
      sa[3] = "Northbend";
      sa[4] = "Northbrook";
      sa[5] = "Riverwood";
      sa[6] = "Springfield";
    }
  }
}
// The class representing column property_damage
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NO";
      sa[1] = "YES";
      sa[2] = "undocumented";
    }
  }
}
// The class representing column police_report_available
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_25_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "NO";
      sa[1] = "YES";
      sa[2] = "undocumented";
    }
  }
}
// The class representing column auto_make
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30 implements java.io.Serializable {
  public static final String[] VALUES = new String[14];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_30_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Accura";
      sa[1] = "Audi";
      sa[2] = "BMW";
      sa[3] = "Chevrolet";
      sa[4] = "Dodge";
      sa[5] = "Ford";
      sa[6] = "Honda";
      sa[7] = "Jeep";
      sa[8] = "Mercedes";
      sa[9] = "Nissan";
      sa[10] = "Saab";
      sa[11] = "Subaru";
      sa[12] = "Toyota";
      sa[13] = "Volkswagen";
    }
  }
}
// The class representing column fraud_reported
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34_0.fill(VALUES);
  }
  static final class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_ColInfo_34_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "N";
      sa[1] = "Y";
    }
  }
}

class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_0_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 15248.5f ? 
                    -0.13209876f : 
                    -0.0826772f) : 
                 (Double.isNaN(data[3 /* policy_csl */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.13209876f : 
                        -0.023371324f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.08550129f : 
                        0.13971984f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.071765184f : 
                        0.24608363f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[30])) ? 
                        0.17645209f : 
                        0.3413917f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                    -0.13209876f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.091829345f : 
                        0.08535612f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
            0.15570916f : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.24426545f : 
                0.41153842f)));
    return pred;
  } // constant pool size = 122B, number of visited nodes = 15, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01000101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -94, 9, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-64, 0, 0, 0};
  // {01001010 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {82, 3, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-123, -44, 9, 0};
  // {01100011 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-58, 16, 0, 0};
  // {00110110 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {108, 45, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {20, 5, 12, 0};
  // {00000010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 48, 0, 0};
  // {01111010 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {94, 45, 0, 0};
  // {11110011 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-49, 51, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_1_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 14998.5f ? 
                    -0.12812668f : 
                    -0.12929833f) : 
                 (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2010.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.122287504f : 
                        -0.02511133f) : 
                     (data[29 /* vehicle_claim */] < 33167.5f ? 
                        -0.13035429f : 
                        0.14958437f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.023300625f : 
                        0.13459706f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        0.15565543f : 
                        0.28443512f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                    -0.12812668f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.11426181f : 
                        0.02623102f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
            0.10264989f : 
             (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1404.4083f ? 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                    0.27438644f : 
                    0.32994393f) : 
                0.14761573f)));
    return pred;
  } // constant pool size = 116B, number of visited nodes = 16, static init size = 300B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 9, 0};
  // {11010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {75, 0, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-123, -44, 9, 0};
  // {10111011 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-35, 27, 0, 0};
  // {01111000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {30, 24, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {20, 5, 12, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {72, 54, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {61, 0, 0, 0};
  // {01011101 11101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-70, 55, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_2_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.00798911f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.12521705f : 
                        -0.06484494f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10668071f : 
                        0.059912328f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        0.035926513f : 
                        0.19805221f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        0.07449385f : 
                        0.21078263f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                    -0.12474422f : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.083318f : 
                        0.06992483f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[30])) ? 
                -0.053386465f : 
                0.23709795f) : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.18176752f : 
                0.27380908f)));
    return pred;
  } // constant pool size = 122B, number of visited nodes = 15, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 00000101 10000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -96, 1, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {40, 0, 0, 0};
  // {01000010 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {66, 16, 0, 0};
  // {10100111 00101011 10110000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-27, -44, 13, 0};
  // {10100011 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-59, 16, 0, 0};
  // {01110110 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {110, 47, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 5, 12, 0};
  // {00000010 00001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {64, 48, 0, 0};
  // {01101000 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {22, 45, 0, 0};
  // {10110001 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-115, 60, 0, 0};
  // {01111100 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {62, 32, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_3_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.0071564233f : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.1233979f : 
                        -0.12200041f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.10273914f : 
                        5.774774E-4f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[11])) ? 
                        0.018967215f : 
                        0.13180229f) : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        0.102653764f : 
                        0.20124166f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.12339654f : 
                        -0.06502618f) : 
                     (Double.isNaN(data[1]) || data[1 /* age */] < 37.5f ? 
                        -0.12645474f : 
                        0.12613462f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
            0.07016638f : 
             (!Double.isNaN(data[17 /* authorities_contacted */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                0.1025078f : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                    0.19759263f : 
                    0.2428382f))));
    return pred;
  } // constant pool size = 126B, number of visited nodes = 16, static init size = 360B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 1, 0};
  // {11101011 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-41, 63, 0, 0};
  // {01010100 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {42, 16, 0, 0};
  // {10100001 00101011 10010000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-123, -44, 9, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {22, 0, 0, 0};
  // {11111000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {31, 24, 0, 0};
  // {00100000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 4, 0};
  // {10000000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 44, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {61, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {9, 0, 0, 0};
  // {10011101 11101100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-71, 55, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_4_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (data[0 /* months_as_customer */] < 64.0f ? 
                    -0.12141826f : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.120693356f : 
                        -0.11936765f)) : 
                 (Double.isNaN(data[3 /* policy_csl */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                     (Double.isNaN(data[24]) || data[24 /* witnesses */] < 2.5f ? 
                        -0.12238029f : 
                        -0.026536083f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[30])) ? 
                        -0.12247003f : 
                        0.069285676f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                     (data[0 /* months_as_customer */] < 80.5f ? 
                        -0.11946539f : 
                        0.08345658f) : 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.060973942f : 
                        0.15981624f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        -0.12046716f : 
                        -0.11930668f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.105101325f : 
                        0.030729337f)))) : 
         (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
            0.053701125f : 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[30])) ? 
                0.079135515f : 
                 (Double.isNaN(data[1]) || data[1 /* age */] < 44.5f ? 
                     (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[19])) ? 
                        0.20513715f : 
                        0.23251483f) : 
                    0.16955665f))));
    return pred;
  } // constant pool size = 143B, number of visited nodes = 19, static init size = 390B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01010101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -86, 9, 0};
  // {11101011 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-41, 63, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {11001011 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-45, 35, 0, 0};
  // {11110110 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {111, 41, 0, 0};
  // {10100111 11101011 10110000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-27, -41, 13, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 5, 12, 0};
  // {01111111 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-2, 19, 0, 0};
  // {00010010 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {72, 54, 0, 0};
  // {01111010 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {94, 47, 0, 0};
  // {11110101 11001100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-81, 51, 0, 0};
  // {01011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {58, 0, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_5_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[1 /* age */] < 25.5f ? 
                0.012191334f : 
                 (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.120390445f : 
                        -0.117493615f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.11058304f : 
                        -0.017866472f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[11])) ? 
                     (data[23 /* bodily_injuries */] < 0.5f ? 
                        -0.0342376f : 
                        0.0872103f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[30])) ? 
                        0.052243527f : 
                        0.1877434f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[20 /* incident_hour_of_the_day */] < 3.5f ? 
                        -0.029366832f : 
                        -0.10970269f) : 
                     (Double.isNaN(data[1]) || data[1 /* age */] < 37.5f ? 
                        -0.12248105f : 
                        0.11215726f)))) : 
         (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
             (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                -0.0061144824f : 
                 (Double.isNaN(data[26]) || data[26 /* total_claim_amount */] < 61098.5f ? 
                    0.21438521f : 
                    0.06026999f)) : 
            0.19252737f));
    return pred;
  } // constant pool size = 111B, number of visited nodes = 16, static init size = 270B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {11010111 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-21, 16, 0, 0};
  // {01111111 10111010 11110000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 93, 15, 0};
  // {10000000 00010101 10000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, -88, 1, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {22, 0, 0, 0};
  // {01111010 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {94, 41, 0, 0};
  // {00100000 00000000 00100000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 0, 4, 0};
  // {00101000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 13, 0, 0};
  // {10111001 10001100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-99, 49, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_6_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (data[0 /* months_as_customer */] < 32.0f ? 
                0.00763462f : 
                 (Double.isNaN(data[32]) || data[32 /* policy_bind_year */] < 2005.5f ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.11746864f : 
                        -0.027246885f) : 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10653037f : 
                        0.01350456f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[8 /* insured_education_level */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 7) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (data[27 /* injury_claim */] < 4999.5f ? 
                        0.17562284f : 
                        0.029360913f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        0.082880154f : 
                        0.19108792f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[20 /* incident_hour_of_the_day */] < 3.5f ? 
                        -0.11670307f : 
                        -0.11562343f) : 
                     (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[30])) ? 
                        -0.089918405f : 
                        0.035815157f)))) : 
         (!Double.isNaN(data[8 /* insured_education_level */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 7) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
            0.03677573f : 
             (Double.isNaN(data[5]) || data[5 /* policy_annual_premium */] < 1404.4083f ? 
                 (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                    0.13748224f : 
                     (!Double.isNaN(data[9 /* insured_occupation */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        0.17230782f : 
                        0.1962394f)) : 
                0.060312595f)));
    return pred;
  } // constant pool size = 120B, number of visited nodes = 17, static init size = 300B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00010101 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, -88, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {74, 0, 0, 0};
  // {00101100 00101100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {52, 52, 0, 0};
  // {00101000 10100000 00110000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {20, 5, 12, 0};
  // {00101000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {20, 44, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {61, 0, 0, 0};
  // {10011111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-7, 62, 0, 0};
  // {11010111 11001000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-21, 19, 0, 0};
}


class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_7_class_0.score0(fdata);
  }
}
class gbm_56d8b3b2_a939_46b7_babf_399cbee200f6_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
         (data[16 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[27]) || data[27 /* injury_claim */] < 15248.5f ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.1168328f : 
                        -0.11416373f) : 
                    -0.041257624f) : 
                 (Double.isNaN(data[30 /* auto_make */]) || !GenModel.bitSetIsInRange(32, 0, data[30]) || (data[30] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[30])) ? 
                     (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.11802918f : 
                        -0.036163405f) : 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.044406306f : 
                        0.16881137f))) : 
             (data[16 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[11 /* insured_relationship */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 6) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 6) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[11])) ? 
                     (!Double.isNaN(data[10 /* insured_hobbies */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.028587384f : 
                        0.07586877f) : 
                     (!Double.isNaN(data[30 /* auto_make */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 14) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[30])) ? 
                        0.040407468f : 
                        0.15792643f)) : 
                 (Double.isNaN(data[10 /* insured_hobbies */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 20) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 20) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.115936294f : 
                        -0.05260785f) : 
                    0.043139905f))) : 
         (data[20 /* incident_hour_of_the_day */] < 12.0f ? 
             (!Double.isNaN(data[19 /* incident_city */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 7) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[19])) ? 
                0.09909685f : 
                0.18743105f) : 
             (Double.isNaN(data[9 /* insured_occupation */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 14) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 14) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                -0.024221987f : 
                0.16764544f)));
    return pred;
  } // constant pool size = 135B, number of visited nodes = 17, static init size = 390B
  // {00000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {96, 0, 0, 0};
  // {10000000 01000101 10010000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, -94, 9, 0};
  // {01111111 11101111 11100000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, -9, 7, 0};
  // {01001011 11100100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-46, 39, 0, 0};
  // {00000000 00000000 00010000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 0, 8, 0};
  // {01010010 00000000 00000000 00000000}