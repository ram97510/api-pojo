/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2025-01-30T12:12:37.334+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-e9ca3f89-00e8-4388-8ab7-6465fabc3a73 > gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73", algorithm="gbm")
public class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 10; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* Project Type */ gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_0.VALUES,
    /* Region */ gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_1.VALUES,
    /* Department */ gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_2.VALUES,
    /* Complexity */ gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_3.VALUES,
    /* Completion% */ null,
    /* Phase */ gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_5.VALUES,
    /* Year */ null,
    /* Month */ null,
    /* Start Date */ null,
    /* End Date */ null,
    /* Project Cost */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {1.0};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {1.0};

  public gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73() { super(NAMES,DOMAINS,"Project Cost"); }
  public String getUUID() { return Long.toString(1068191465971091744L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_0.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_1.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_2.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_3.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_4.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_5.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_6.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_7.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_8.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_9.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_10.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_11.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_12.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_13.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_14.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_15.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_16.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_17.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_18.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_19.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_20.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_21.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_22.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_23.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_24.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_25.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_26.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_27.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_28.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_29.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_30.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_31.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_32.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_33.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_34.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_35.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_36.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_37.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_38.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_39.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_40.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_41.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_42.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_43.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_44.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_45.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_46.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_47.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_48.score0(data,preds);
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_49.score0(data,preds);
    preds[0] += 4136458.506666667;
    preds[0] = preds[0];
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73 implements java.io.Serializable {
  public static final String[] VALUES = new String[10];
  static {
    NamesHolder_gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Project Type";
      sa[1] = "Region";
      sa[2] = "Department";
      sa[3] = "Complexity";
      sa[4] = "Completion%";
      sa[5] = "Phase";
      sa[6] = "Year";
      sa[7] = "Month";
      sa[8] = "Start Date";
      sa[9] = "End Date";
    }
  }
}
// The class representing column Project Type
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_0_0.fill(VALUES);
  }
  static final class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "COST REDUCTION";
      sa[1] = "INCOME GENERATION";
      sa[2] = "PROCESS IMPROVEMENT";
      sa[3] = "WORKING CAPITAL IMPROVEMENT";
    }
  }
}
// The class representing column Region
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_1_0.fill(VALUES);
  }
  static final class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "East";
      sa[1] = "North";
      sa[2] = "South";
      sa[3] = "West";
    }
  }
}
// The class representing column Department
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Admin & BI";
      sa[1] = "Sales and Marketing";
      sa[2] = "Supply Chain";
      sa[3] = "Warehouse";
      sa[4] = "eCommerce";
    }
  }
}
// The class representing column Complexity
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "High";
      sa[1] = "Low";
      sa[2] = "Medium";
    }
  }
}
// The class representing column Phase
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_5_0.fill(VALUES);
  }
  static final class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Phase 1 - Explore";
      sa[1] = "Phase 2 - Develop";
      sa[2] = "Phase 3 - Plan";
      sa[3] = "Phase 4 - Implement";
      sa[4] = "Phase 5 - Measure";
    }
  }
}

class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_0_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.75992185f ? 
            30867.61f : 
             (data[9 /* End Date */] < 1.66464179E12f ? 
                -66634.766f : 
                 (data[4 /* Completion% */] < 0.85535157f ? 
                    11647.47f : 
                    -33482.523f))) : 
         (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
            -2611.3955f : 
            61061.098f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {5, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_1_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.75992185f ? 
            27780.86f : 
             (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.726545E12f ? 
                 (data[7 /* Month */] < 4.5f ? 
                    -23847.928f : 
                    -69339.195f) : 
                9458.13f)) : 
         (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
            -2350.2454f : 
            54954.996f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {5, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_2_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.75992185f ? 
            25002.76f : 
             (data[9 /* End Date */] < 1.66464179E12f ? 
                -55880.57f : 
                 (data[4 /* Completion% */] < 0.85535157f ? 
                    13354.92f : 
                    -27911.95f))) : 
         (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
            -2115.2205f : 
            49459.496f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {5, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_3_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                -66614.12f : 
                -6695.4883f) : 
             (data[7 /* Month */] < 5.5f ? 
                42215.113f : 
                -335.9896f)) : 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
            8335.723f : 
            60322.273f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_4_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.8148828f ? 
             (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                -25646.371f : 
                38888.31f) : 
             (Double.isNaN(data[7]) || data[7 /* Month */] < 6.5f ? 
                -61511.71f : 
                -2697.1772f)) : 
         (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
            -2806.0386f : 
            43539.562f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_5_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                -59532.61f : 
                -5815.8677f) : 
             (data[7 /* Month */] < 5.5f ? 
                39688.887f : 
                -929.74164f)) : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.86492187f ? 
            8945.329f : 
            50772.83f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_6_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
             (Double.isNaN(data[0 /* Project Type */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                -43606.695f : 
                -7298.686f) : 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                -411.3764f : 
                34799.97f)) : 
        37130.57f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 4, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {24, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {10, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_7_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -52563.33f : 
                -2839.4985f) : 
             (data[7 /* Month */] < 5.5f ? 
                35341.984f : 
                -783.8146f)) : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.86492187f ? 
            7732.386f : 
            45737.49f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_8_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.8148828f ? 
             (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                -21224.844f : 
                38801.992f) : 
             (data[4 /* Completion% */] < 0.964929f ? 
                -58411.812f : 
                -6648.773f)) : 
         (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
            -3526.2136f : 
            35036.97f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_9_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                -50018.965f : 
                -2968.1177f) : 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                -1301.8208f : 
                32542.97f)) : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.86492187f ? 
            7706.4204f : 
            40616.367f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_10_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.72654907E12f ? 
             (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.68564569E12f ? 
                 (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.895f ? 
                     (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                        -14749.872f : 
                        41530.305f) : 
                    -29255.229f) : 
                -68199.21f) : 
            26284.55f) : 
        29445.33f);
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {10, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_11_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
            -44055.203f : 
            16364.5205f) : 
         (Double.isNaN(data[6]) || data[6 /* Year */] < 2024.5f ? 
             (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.69231345E12f ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                    -17873.182f : 
                    39188.04f) : 
                -49018.78f) : 
            43604.37f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {28, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_12_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
         (data[7 /* Month */] < 4.5f ? 
            15878.19f : 
             (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                -62403.71f : 
                 (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8753125f ? 
                    14333.634f : 
                    -26889.334f))) : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.86492187f ? 
            6024.1157f : 
            35119.754f));
    return pred;
  } // constant pool size = 27B, number of visited nodes = 5, static init size = 30B
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {25, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_13_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (data[4 /* Completion% */] < 0.75992185f ? 
            25383.564f : 
             (data[9 /* End Date */] < 1.67371276E12f ? 
                -37558.63f : 
                -14.328947f)) : 
         (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
            -2247.4553f : 
            32425.408f));
    return pred;
  } // constant pool size = 28B, number of visited nodes = 4, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {10, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_14_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        25771.232f : 
         (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -49240.363f : 
                8405.694f) : 
             (data[4 /* Completion% */] < 0.9549853f ? 
                -22652.95f : 
                50788.242f)));
    return pred;
  } // constant pool size = 28B, number of visited nodes = 4, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {10, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_15_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.68543702E12f ? 
            13500.336f : 
            -38727.492f) : 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66861183E12f ? 
             (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                -38101.973f : 
                11947.383f) : 
            43506.53f));
    return pred;
  } // constant pool size = 28B, number of visited nodes = 4, static init size = 60B
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {12, 0, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {24, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_16_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[0 /* Project Type */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
             (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.69331786E12f ? 
                4892.6177f : 
                -46905.15f) : 
            17561.016f) : 
         (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
            -7170.0205f : 
            25638.693f));
    return pred;
  } // constant pool size = 33B, number of visited nodes = 4, static init size = 90B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {22, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_17_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        23786.988f : 
         (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8949658f ? 
                 (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                    -55079.65f : 
                    53367.418f) : 
                -49210.652f) : 
             (data[4 /* Completion% */] < 0.9549853f ? 
                -20534.2f : 
                44654.223f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {10, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_18_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
             (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.73428362E12f ? 
                 (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.68843713E12f ? 
                     (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -23884.963f : 
                        22590.305f) : 
                    -64033.426f) : 
                13925.798f) : 
            25331.295f) : 
        19362.436f);
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {18, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_19_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        22469.264f : 
         (data[9 /* End Date */] < 1.67502951E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.96496093f ? 
                -41314.023f : 
                19519.445f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
                -17187.533f : 
                31188.031f)));
    return pred;
  } // constant pool size = 23B, number of visited nodes = 4, static init size = 30B
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_20_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        15218.863f : 
         (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8753125f ? 
                5575.5376f : 
                -36775.426f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
                -591.8f : 
                21962.016f)));
    return pred;
  } // constant pool size = 23B, number of visited nodes = 4, static init size = 30B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_21_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.69216718E12f ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.6632502E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9644531f ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                    -41618.156f : 
                    5271.3374f) : 
                21190.732f) : 
            42713.273f) : 
         (data[9 /* End Date */] < 1.73428362E12f ? 
            -54993.97f : 
            13358.033f));
    return pred;
  } // constant pool size = 27B, number of visited nodes = 5, static init size = 30B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_22_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        20816.81f : 
         (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8949658f ? 
                 (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                    -45028.2f : 
                    46054.62f) : 
                -43706.785f) : 
             (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                -12282.093f : 
                44484.777f)));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {10, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {20, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_23_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
             (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                -27934.969f : 
                 (Double.isNaN(data[0 /* Project Type */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[0])) ? 
                    -23702.791f : 
                    29613.523f)) : 
            20378.82f) : 
        17801.371f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 4, static init size = 120B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {26, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_24_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        14870.492f : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9051172f ? 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[1 /* Region */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                    -45782.617f : 
                    10701.589f) : 
                47260.496f) : 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                -52355.336f : 
                23760.785f)));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_25_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        13383.442f : 
         (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8753125f ? 
                2864.7556f : 
                -28506.49f) : 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.86492187f ? 
                -1254.7977f : 
                19256.182f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_26_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.69216718E12f ? 
             (data[4 /* Completion% */] < 0.8496094f ? 
                -8456.196f : 
                16092.124f) : 
             (Double.isNaN(data[6]) || data[6 /* Year */] < 2024.5f ? 
                -45448.848f : 
                14039.85f)) : 
        15827.245f);
    return pred;
  } // constant pool size = 23B, number of visited nodes = 4, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_27_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        18267.447f : 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66861183E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.96496093f ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                    -48114.547f : 
                    -11823.093f) : 
                14578.123f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -15469.025f : 
                31250.059f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_28_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        12461.662f : 
         (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8753125f ? 
                2405.8223f : 
                -26513.336f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
                -3919.6375f : 
                19076.963f)));
    return pred;
  } // constant pool size = 23B, number of visited nodes = 4, static init size = 30B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_29_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.70012102E12f ? 
         (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.67124258E12f ? 
             (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                    -29178.973f : 
                    -7270.4775f) : 
                13904.36f) : 
            34930.91f) : 
         (data[8 /* Start Date */] < 1.72654907E12f ? 
            -46727.96f : 
            11335.411f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {18, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_30_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        12185.984f : 
         (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8753125f ? 
                2104.3875f : 
                -23970.068f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
                -4469.47f : 
                16615.7f)));
    return pred;
  } // constant pool size = 23B, number of visited nodes = 4, static init size = 30B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_31_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.74869473E12f ? 
         (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.70014147E12f ? 
             (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.67117967E12f ? 
                 (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9639062f ? 
                     (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                        -34426.56f : 
                        6355.9126f) : 
                    17841.275f) : 
                31555.207f) : 
            -24738.635f) : 
        16589.768f);
    return pred;
  } // constant pool size = 27B, number of visited nodes = 5, static init size = 30B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_32_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        16591.918f : 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66861183E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.96496093f ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                    -41023.633f : 
                    -11611.505f) : 
                12126.015f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -12476.107f : 
                26601.75f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_33_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        12189.66f : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9051172f ? 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                    -34624.777f : 
                    10617.272f) : 
                40754.04f) : 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                -43148.344f : 
                21196.73f)));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_34_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
            -35927.754f : 
             (!Double.isNaN(data[3 /* Complexity */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                -24543.018f : 
                 (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66305215E12f ? 
                    5984.7363f : 
                    44863.523f))) : 
         (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
            -11661.26f : 
            32600.094f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 5, static init size = 120B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {14, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_35_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        11231.196f : 
         (Double.isNaN(data[7]) || data[7 /* Month */] < 9.5f ? 
             (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                -19004.742f : 
                1102.6559f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -4968.0977f : 
                14511.641f)));
    return pred;
  } // constant pool size = 28B, number of visited nodes = 4, static init size = 60B
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {9, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_36_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.8299219f ? 
                -911.4437f : 
                -33478.2f) : 
             (data[6 /* Year */] < 2022.5f ? 
                -16581.648f : 
                23852.47f)) : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.84988284f ? 
            -3581.0237f : 
            22401.193f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_37_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* Month */] < 8.5f ? 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                -13780.965f : 
                8230.614f) : 
             (data[4 /* Completion% */] < 0.8496094f ? 
                3291.8374f : 
                31248.824f)) : 
         (Double.isNaN(data[5 /* Phase */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
            -21309.793f : 
            8624.744f));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 0, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {17, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_38_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.73957028E12f ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.69228082E12f ? 
             (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66332282E12f ? 
                 (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -25807.56f : 
                        -1808.8676f) : 
                    11294.441f) : 
                26378.465f) : 
            -21872.266f) : 
        14730.432f);
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {22, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_39_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 3.5f ? 
        14500.035f : 
         (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                 (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.72625651E12f ? 
                     (Double.isNaN(data[7]) || data[7 /* Month */] < 8.5f ? 
                        -11955.897f : 
                        -45138.45f) : 
                    10764.783f) : 
                22471.35f) : 
            13221.679f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_40_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        15826.305f : 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66861183E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.96496093f ? 
                 (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                    -36002.06f : 
                    -8462.025f) : 
                9993.631f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -9075.724f : 
                23917.867f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_41_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 3.5f ? 
        14427.927f : 
         (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                 (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.72625651E12f ? 
                     (Double.isNaN(data[7]) || data[7 /* Month */] < 8.5f ? 
                        -10696.768f : 
                        -40685.42f) : 
                    8738.662f) : 
                19962.328f) : 
            11674.002f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_42_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        15040.666f : 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.66861183E12f ? 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.96496093f ? 
                 (!Double.isNaN(data[2 /* Department */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                    -34404.45f : 
                    -7954.4023f) : 
                8778.7295f) : 
             (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                -9385.0625f : 
                20409.121f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_43_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.69216718E12f ? 
         (Double.isNaN(data[8]) || data[8 /* Start Date */] < 1.6632502E12f ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                    -36118.83f : 
                    13022.51f) : 
                11594.695f) : 
            23559.74f) : 
         (data[8 /* Start Date */] < 1.72637972E12f ? 
            -31557.932f : 
            4994.7515f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {20, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_44_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 3.5f ? 
        14552.6875f : 
         (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                 (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.73428362E12f ? 
                     (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9059375f ? 
                        -10100.201f : 
                        -38471.508f) : 
                    6610.567f) : 
                18152.846f) : 
            10079.344f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_45_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.70012102E12f ? 
         (Double.isNaN(data[9]) || data[9 /* End Date */] < 1.67124258E12f ? 
             (Double.isNaN(data[2 /* Department */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                    -33087.246f : 
                    11427.992f) : 
                11280.377f) : 
            21505.84f) : 
         (data[9 /* End Date */] < 1.73438888E12f ? 
            -27555.54f : 
            3604.0195f));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {20, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {20, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_46_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 4.5f ? 
        10393.942f : 
         (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.9051172f ? 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[1 /* Region */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                    -28799.033f : 
                    3768.3364f) : 
                33984.35f) : 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                -37305.863f : 
                17814.268f)));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_47_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* Completion% */] < 0.75992185f ? 
        13706.988f : 
         (!Double.isNaN(data[1 /* Region */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
            -15556.497f : 
             (Double.isNaN(data[4]) || data[4 /* Completion% */] < 0.95967436f ? 
                 (Double.isNaN(data[0 /* Project Type */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                    -24125.324f : 
                    18140.244f) : 
                22148.81f)));
    return pred;
  } // constant pool size = 28B, number of visited nodes = 4, static init size = 60B
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {7, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_48_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 3.5f ? 
        13429.196f : 
         (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
             (Double.isNaN(data[3 /* Complexity */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                -23780.207f : 
                11039.734f) : 
             (Double.isNaN(data[6]) || data[6 /* Year */] < 2023.5f ? 
                 (!Double.isNaN(data[5 /* Phase */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                    -2693.7275f : 
                    29013.502f) : 
                -19784.867f)));
    return pred;
  } // constant pool size = 37B, number of visited nodes = 5, static init size = 90B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 0};
}


class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_49_class_0.score0(fdata);
  }
}
class gbm_e9ca3f89_00e8_4388_8ab7_6465fabc3a73_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* Month */] < 3.5f ? 
        12086.279f : 
         (!Double.isNaN(data[0 /* Project Type */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
             (data[8 /* Start Date */] < 1.66861183E12f ? 
                -25676.559f : 
                8067.1313f) : 
             (Double.isNaN(data[1 /* Region */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (data[4 /* Completion% */] < 0.8446875f ? 
                    -25886.623f : 
                    10364.418f) : 
                22188.371f)));
    return pred;
  } // constant pool size = 32B, number of visited nodes = 5, static init size = 60B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
}


